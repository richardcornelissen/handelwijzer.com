.partijen .simply-scroll-container,.ui-tab{position:relative}.m-pricing-table,.m-pricing-table th,.pricebox h3{text-align:center}.bg-primary{background:#002959}.bg-secundary{background:#107FC2}.introduction{min-height:460px;background-image:url(images/bg-intro.jpg);background-size:cover;padding:70px 0}.introduction h1{margin-top:0}.list-checkmark-circle{padding:10px 0}.video-container{width:540px;height:300px;border:2px solid #fff;box-shadow:0 0 15px 0 #676767}.ui-tabs{padding:0}.ui-tab{-webkit-transition:all .3s ease;-moz-transition:all .3s ease;-ms-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease;background:#e0e0e0;min-height:100px;display:inline-block;list-style:none;width:calc(100%/7.2);font-size:.9em;font-weight:700}.ui-tab.active{background:#107FC2}.ui-tab.active a{color:#fff}.ui-tab .icon{font-size:1.8em;display:block;padding:8px 0 12px}.ui-tab:hover{background-color:#199dec}.ui-tab a{text-decoration:none;float:left;padding:15px 0;width:100%;min-height:100px;height:100%;display:block}.tab-content{padding-bottom:30px}.tab-content img{width:80%;min-width:300px}.partijen{background:#f9f9f9}.partijen .simply-scroll-clip{position:relative;overflow:hidden;padding:40px 0}.partijen .simply-scroll-list{overflow:hidden;margin:0;padding:0;list-style:none}.simply-scroll .simply-scroll-list li{float:left;width:160px;height:60px}.pricing{margin-top:50px;margin-bottom:70px}.pricing h2{margin-bottom:30px}.pricebox{padding:10px;margin-top:5px;background:#efefef}.pricebox h3{color:#002959}.m-pricing-box .price-label{color:#fff;padding:15px}.m-pricing-box .price-label h1{display:inline-block;font-size:4em;font-weight:400;margin-bottom:20px;margin-top:5px}.m-pricing-box .price-label h1 sup{top:0;font-size:.2em}.m-pricing-box .panel-body{padding:0}.m-pricing-box .panel-body ul{padding:0 15px}.m-pricing-box .panel-body li{border-bottom:1px dashed #000;padding:10px 0;list-style:none}.m-pricing-box .panel-body li:last-child{border:none}.m-pricing-table .glyphicon-ok{color:#375d3b}.m-pricing-table td:first-child,.m-pricing-table th:first-child{text-align:left;width:15%}.m-pricing-table td,.m-pricing-table th{width:28%}.m-add-info{font-size:.8em;opacity:.5}.well{margin-top:30px;padding:0;background:#fff;border:0;box-shadow:none}h2{margin:40px 0}.bg-secundary-light{background:#48b1f0}.bg-primary-light{background:#003573}.bg-combi-light{background:#5d9d64}.price-module{margin:5px 0}.price-list{line-height:30px;margin:0}.price-list li{border-bottom:1px dashed #676767;padding:10px 0}.price-list li:last-child{border:none}.pricelabel,.pricelabel-aanbieding{background:#107FC2;margin-left:-10px;margin-right:-10px;text-align:center;color:#fff;font-size:1.2em;padding:10px 0}.pricelabel-aanbieding{padding:0;height:43px}.pricelabel-aanbieding span:first-child{text-decoration:line-through}.aanbieding-tag{display:inline-block;transform:rotate(-7deg);background:#f9cf54;color:#000;padding:4px 8px;font-size:1.4em}.prefooter,.scrollup,.text-white{color:#fff}.price-freq{font-weight:400}.module-price,.module-title{font-size:1.1em;font-weight:700}.module-price{float:right;font-size:1.1em}.module-description{margin-top:5px;font-size:.9em}.scrollup{width:30px;height:30px;font-size:22px;line-height:30px;text-align:center;display:none;position:fixed;right:40px;bottom:40px;background:rgba(0,0,0,.3)}.scrollup:before{font-family:icomoon;content:"\ed71"}.scrollup:focus,.scrollup:hover{text-decoration:none}.prefooter{background:#107FC2;padding:30px}.prefooter h3{color:#fff;font-size:1em;margin:10px 0}.prefooter h3.sub-title{font-weight:300}@media only screen and (max-width:480px){.video-container{width:100%;height:196px}.ui-tab{width:100%}}.deno-footer-image{width:220px;float:right;padding:5px;margin:10px 25px}.panel-default>.panel-heading.panel-heading-primary{background:#002959;border:none}.panel-default>.panel-heading.panel-heading-secundary{background:#107FC2;border:none}.panel-default>.panel-heading.panel-heading-combi{background:#375d3b;border:none}.m-spacing-bottom{margin-bottom:30px}.m-spacing-padding{padding:50px}.m-text-linethrough{text-decoration:line-through}.vcenter{display:inline-block;vertical-align:middle;float:none}
/*# sourceMappingURL=data:application/json;base64, */
