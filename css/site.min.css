.partijen .simply-scroll-container,.ui-tab{position:relative}.m-pricing-table,.m-pricing-table th,.pricebox h3{text-align:center}.bg-primary{background:#002959}.bg-secundary{background:#107FC2}.introduction{min-height:460px;background-image:url(images/bg-intro.jpg);background-size:cover;padding:70px 0}.introduction h1{margin-top:0}.list-checkmark-circle{padding:10px 0}.video-container{width:540px;height:300px;border:2px solid #fff;box-shadow:0 0 15px 0 #676767}.ui-tabs{padding:0}.ui-tab{-webkit-transition:all .3s ease;-moz-transition:all .3s ease;-ms-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease;background:#e0e0e0;min-height:100px;display:inline-block;list-style:none;width:calc(100%/7.2);font-size:.9em;font-weight:700}.ui-tab.active{background:#107FC2}.ui-tab.active a{color:#fff}.ui-tab .icon{font-size:1.8em;display:block;padding:8px 0 12px}.ui-tab:hover{background-color:#199dec}.ui-tab a{text-decoration:none;float:left;padding:15px 0;width:100%;min-height:100px;height:100%;display:block}.tab-content{padding-bottom:30px}.tab-content img{width:80%;min-width:300px}.partijen{background:#f9f9f9}.partijen .simply-scroll-clip{position:relative;overflow:hidden;padding:40px 0}.partijen .simply-scroll-list{overflow:hidden;margin:0;padding:0;list-style:none}.simply-scroll .simply-scroll-list li{float:left;width:160px;height:60px}.pricing{margin-top:50px;margin-bottom:70px}.pricing h2{margin-bottom:30px}.pricebox{padding:10px;margin-top:5px;background:#efefef}.pricebox h3{color:#002959}.m-pricing-box .price-label{color:#fff;padding:15px}.m-pricing-box .price-label h1{display:inline-block;font-size:4em;font-weight:400;margin-bottom:20px;margin-top:5px}.m-pricing-box .price-label h1 sup{top:0;font-size:.2em}.m-pricing-box .panel-body{padding:0}.m-pricing-box .panel-body ul{padding:0 15px}.m-pricing-box .panel-body li{border-bottom:1px dashed #000;padding:10px 0;list-style:none}.m-pricing-box .panel-body li:last-child{border:none}.m-pricing-table .glyphicon-ok{color:#375d3b}.m-pricing-table td:first-child,.m-pricing-table th:first-child{text-align:left;width:15%}.m-pricing-table td,.m-pricing-table th{width:28%}.m-add-info{font-size:.8em;opacity:.5}.well{margin-top:30px;padding:0;background:#fff;border:0;box-shadow:none}h2{margin:40px 0}.bg-secundary-light{background:#48b1f0}.bg-primary-light{background:#003573}.bg-combi-light{background:#5d9d64}.price-module{margin:5px 0}.price-list{line-height:30px;margin:0}.price-list li{border-bottom:1px dashed #676767;padding:10px 0}.price-list li:last-child{border:none}.pricelabel,.pricelabel-aanbieding{background:#107FC2;margin-left:-10px;margin-right:-10px;text-align:center;color:#fff;font-size:1.2em;padding:10px 0}.pricelabel-aanbieding{padding:0;height:43px}.pricelabel-aanbieding span:first-child{text-decoration:line-through}.aanbieding-tag{display:inline-block;transform:rotate(-7deg);background:#f9cf54;color:#000;padding:4px 8px;font-size:1.4em}.prefooter,.scrollup,.text-white{color:#fff}.price-freq{font-weight:400}.module-price,.module-title{font-size:1.1em;font-weight:700}.module-price{float:right;font-size:1.1em}.module-description{margin-top:5px;font-size:.9em}.scrollup{width:30px;height:30px;font-size:22px;line-height:30px;text-align:center;display:none;position:fixed;right:40px;bottom:40px;background:rgba(0,0,0,.3)}.scrollup:before{font-family:icomoon;content:"\ed71"}.scrollup:focus,.scrollup:hover{text-decoration:none}.prefooter{background:#107FC2;padding:30px}.prefooter h3{color:#fff;font-size:1em;margin:10px 0}.prefooter h3.sub-title{font-weight:300}@media only screen and (max-width:480px){.video-container{width:100%;height:196px}.ui-tab{width:100%}}.deno-footer-image{width:220px;float:right;padding:5px;margin:10px 25px}.panel-default>.panel-heading.panel-heading-primary{background:#002959;border:none}.panel-default>.panel-heading.panel-heading-secundary{background:#107FC2;border:none}.panel-default>.panel-heading.panel-heading-combi{background:#375d3b;border:none}.m-spacing-bottom{margin-bottom:30px}.m-spacing-padding{padding:50px}.m-text-linethrough{text-decoration:line-through}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdGUubWluLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRUEsbUNBM0NBLFFBa0RFLFNBQVUsU0FzRFosaUJBSUUsb0JBakNBLGFBa0NFLFdBQVksT0F2SWhCLFlBQ0UsV0FBWSxRQUVkLGNBQ0UsV0FBWSxRQUVkLGNBQ0UsV0FBWSxNQUNaLGlCQUFrQix5QkFDbEIsZ0JBQWlCLE1BQ2pCLFFBQVMsS0FBSyxFQUNkLGlCQUNFLFdBQVksRUFFaEIsdUJBQ0UsUUFBUyxLQUFLLEVBRWhCLGlCQUNFLE1BQU8sTUFDUCxPQUFRLE1BQ1IsT0FBUSxJQUFJLE1BQU0sS0FDbEIsV0FBWSxFQUFJLEVBQUksS0FBSyxFQUFJLFFBRS9CLFNBQ0UsUUFBUyxFQUVYLFFBQ0UsbUJBQW9CLElBQUksSUFBTSxLQUM5QixnQkFBaUIsSUFBSSxJQUFNLEtBQzNCLGVBQWdCLElBQUksSUFBTSxLQUMxQixjQUFlLElBQUksSUFBTSxLQUN6QixXQUFZLElBQUksSUFBTSxLQUN0QixXQUFZLFFBQ1osV0FBWSxNQUNaLFFBQVMsYUFDVCxXQUFZLEtBQ1osTUFBTyxlQUNQLFVBQVcsS0FDWCxZQUFhLElBR2YsZUFDRSxXQUFZLFFBQ1osaUJBQ0UsTUFBTyxLQUVYLGNBQ0UsVUFBVyxNQUNYLFFBQVMsTUFDVCxRQUFTLElBQUksRUFBRSxLQUVqQixjQUNFLGlCQUFrQixRQUVwQixVQUNFLGdCQUFpQixLQUNqQixNQUFPLEtBQ1AsUUFBUyxLQUFLLEVBQ2QsTUFBTyxLQUNQLFdBQVksTUFDWixPQUFRLEtBQ1IsUUFBUyxNQUVYLGFBQ0UsZUFBZ0IsS0FDaEIsaUJBQ0UsTUFBTyxJQUNQLFVBQVcsTUFLZixVQUNFLFdBQVksUUFFZCw4QkFDRSxTQUFVLFNBQ1YsU0FBVSxPQUNWLFFBQVMsS0FBSyxFQUVoQiw4QkFDRSxTQUFVLE9BQ1YsT0FBUSxFQUNSLFFBQVMsRUFDVCxXQUFZLEtBRWQsc0NBQ0UsTUFBTyxLQUNQLE1BQU8sTUFDUCxPQUFRLEtBRVYsU0FDRSxXQUFZLEtBQ1osY0FBZSxLQUNmLFlBQ0UsY0FBZSxLQUVuQixVQUNFLFFBQVMsS0FDVCxXQUFZLElBQ1osV0FBWSxRQUNaLGFBQ0UsTUFBTyxRQUlYLDRCQUNFLE1BQU8sS0FDUCxRQUFTLEtBQ1QsK0JBQ0UsUUFBUyxhQUNULFVBQVcsSUFDWCxZQUFhLElBQ2IsY0FBZSxLQUNmLFdBQVksSUFDWixtQ0FDRSxJQUFLLEVBQ0wsVUFBVyxLQUVqQiwyQkFDRSxRQUFTLEVBQ1QsOEJBQ0UsUUFBUyxFQUFFLEtBQ2IsOEJBQ0UsY0FBZSxJQUFJLE9BQU8sS0FDMUIsUUFBUyxLQUFLLEVBQ2QsV0FBWSxLQUNaLHlDQUNFLFlBSUosK0JBQ0UsTUFBTyxRQUd3QixnQ0FBakMsZ0NBQ0UsV0FBWSxLQUNaLE1BQU8sSUFDWSxvQkFBckIsb0JBQ0UsTUFBTyxJQUVYLFlBQ0UsVUFBVyxLQUNYLFFBQVMsR0FHWCxNQUNFLFdBQVksS0FDWixRQUFTLEVBQ1QsV0FBWSxLQUNaLE9BQVEsRUFDUixXQUFZLEtBR2QsR0FDRSxPQUFRLEtBQUssRUFHZixvQkFDRSxXQUFZLFFBRWQsa0JBQ0UsV0FBWSxRQUVkLGdCQUNFLFdBQVksUUFFZCxjQUNFLE9BQVEsSUFBSSxFQUVkLFlBQ0UsWUFBYSxLQUNiLE9BQVEsRUFDUixlQUNFLGNBQWUsSUFBSSxPQUFPLFFBQzFCLFFBQVMsS0FBSyxFQUNoQiwwQkFDRSxZQUVKLFlBQWEsdUJBQ1gsV0FBWSxRQUNaLFlBQWEsTUFDYixhQUFjLE1BQ2QsV0FBWSxPQUNaLE1BQU8sS0FDUCxVQUFXLE1BQ1gsUUFBUyxLQUFLLEVBRWhCLHVCQUNFLFFBQVMsRUFDVCxPQUFRLEtBQ1Isd0NBQ0UsZ0JBQWlCLGFBRXJCLGdCQUNFLFFBQVMsYUFDVCxVQUFXLGNBQ1gsV0FBWSxRQUNaLE1BQU8sS0FDUCxRQUFTLElBQUksSUFDYixVQUFXLE1BcUNiLFdBcEJBLFVBNERBLFlBQ0UsTUFBTyxLQTVFVCxZQUNFLFlBQWEsSUFFQSxjQUFmLGNBQ0UsVUFBVyxNQUNYLFlBQWEsSUFFZixjQUNFLE1BQU8sTUFDUCxVQUFXLE1BRWIsb0JBQ0UsV0FBWSxJQUNaLFVBQVcsS0FFYixVQUNFLE1BQU8sS0FDUCxPQUFRLEtBQ1IsVUFBVyxLQUNYLFlBQWEsS0FDYixXQUFZLE9BQ1osUUFBUyxLQUNULFNBQVUsTUFDVixNQUFPLEtBQ1AsT0FBUSxLQUNSLFdBQVksZUFHZCxpQkFDRSxZQUFhLFFBQ2IsUUFBUyxRQUVNLGdCQUFqQixnQkFDRSxnQkFBaUIsS0FFbkIsV0FDRSxXQUFZLFFBQ1osUUFBUyxLQUVULGNBQ0UsTUFBTyxLQUNQLFVBQVcsSUFDWCxPQUFRLEtBQUssRUFDZix3QkFDRSxZQUFhLElBSWpCLHlDQUNFLGlCQUNFLE1BQU8sS0FDUCxPQUFRLE1BQ1YsUUFDRSxNQUFPLE1BRVgsbUJBQ0UsTUFBTyxNQUNQLE1BQU8sTUFDUCxRQUFTLElBQ1QsT0FBUSxLQUFLLEtBR2Ysb0RBQ0UsV0FBWSxRQUNaLFlBRUYsc0RBQ0UsV0FBWSxRQUNaLFlBRUYsa0RBQ0UsV0FBWSxRQUNaLFlBT0Ysa0JBQ0UsY0FBZSxLQUVqQixtQkFDRSxRQUFTLEtBR1gsb0JBQ0UsZ0JBQWlCIiwiZmlsZSI6InNpdGUubWluLmNzcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXJ0aWplbiAuc2ltcGx5LXNjcm9sbC1jb250YWluZXIsLnVpLXRhYntwb3NpdGlvbjpyZWxhdGl2ZX0ubS1wcmljaW5nLXRhYmxlLC5tLXByaWNpbmctdGFibGUgdGgsLnByaWNlYm94IGgze3RleHQtYWxpZ246Y2VudGVyfS5iZy1wcmltYXJ5e2JhY2tncm91bmQ6IzAwMjk1OX0uYmctc2VjdW5kYXJ5e2JhY2tncm91bmQ6IzEwN0ZDMn0uaW50cm9kdWN0aW9ue21pbi1oZWlnaHQ6NDYwcHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1hZ2VzL2JnLWludHJvLmpwZyk7YmFja2dyb3VuZC1zaXplOmNvdmVyO3BhZGRpbmc6NzBweCAwfS5pbnRyb2R1Y3Rpb24gaDF7bWFyZ2luLXRvcDowfS5saXN0LWNoZWNrbWFyay1jaXJjbGV7cGFkZGluZzoxMHB4IDB9LnZpZGVvLWNvbnRhaW5lcnt3aWR0aDo1NDBweDtoZWlnaHQ6MzAwcHg7Ym9yZGVyOjJweCBzb2xpZCAjZmZmO2JveC1zaGFkb3c6MCAwIDE1cHggMCAjNjc2NzY3fS51aS10YWJze3BhZGRpbmc6MH0udWktdGFiey13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjNzIGVhc2U7LW1vei10cmFuc2l0aW9uOmFsbCAuM3MgZWFzZTstbXMtdHJhbnNpdGlvbjphbGwgLjNzIGVhc2U7LW8tdHJhbnNpdGlvbjphbGwgLjNzIGVhc2U7dHJhbnNpdGlvbjphbGwgLjNzIGVhc2U7YmFja2dyb3VuZDojZTBlMGUwO21pbi1oZWlnaHQ6MTAwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7bGlzdC1zdHlsZTpub25lO3dpZHRoOmNhbGMoMTAwJS83LjIpO2ZvbnQtc2l6ZTouOWVtO2ZvbnQtd2VpZ2h0OjcwMH0udWktdGFiLmFjdGl2ZXtiYWNrZ3JvdW5kOiMxMDdGQzJ9LnVpLXRhYi5hY3RpdmUgYXtjb2xvcjojZmZmfS51aS10YWIgLmljb257Zm9udC1zaXplOjEuOGVtO2Rpc3BsYXk6YmxvY2s7cGFkZGluZzo4cHggMCAxMnB4fS51aS10YWI6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojMTk5ZGVjfS51aS10YWIgYXt0ZXh0LWRlY29yYXRpb246bm9uZTtmbG9hdDpsZWZ0O3BhZGRpbmc6MTVweCAwO3dpZHRoOjEwMCU7bWluLWhlaWdodDoxMDBweDtoZWlnaHQ6MTAwJTtkaXNwbGF5OmJsb2NrfS50YWItY29udGVudHtwYWRkaW5nLWJvdHRvbTozMHB4fS50YWItY29udGVudCBpbWd7d2lkdGg6ODAlO21pbi13aWR0aDozMDBweH0ucGFydGlqZW57YmFja2dyb3VuZDojZjlmOWY5fS5wYXJ0aWplbiAuc2ltcGx5LXNjcm9sbC1jbGlwe3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjtwYWRkaW5nOjQwcHggMH0ucGFydGlqZW4gLnNpbXBseS1zY3JvbGwtbGlzdHtvdmVyZmxvdzpoaWRkZW47bWFyZ2luOjA7cGFkZGluZzowO2xpc3Qtc3R5bGU6bm9uZX0uc2ltcGx5LXNjcm9sbCAuc2ltcGx5LXNjcm9sbC1saXN0IGxpe2Zsb2F0OmxlZnQ7d2lkdGg6MTYwcHg7aGVpZ2h0OjYwcHh9LnByaWNpbmd7bWFyZ2luLXRvcDo1MHB4O21hcmdpbi1ib3R0b206NzBweH0ucHJpY2luZyBoMnttYXJnaW4tYm90dG9tOjMwcHh9LnByaWNlYm94e3BhZGRpbmc6MTBweDttYXJnaW4tdG9wOjVweDtiYWNrZ3JvdW5kOiNlZmVmZWZ9LnByaWNlYm94IGgze2NvbG9yOiMwMDI5NTl9Lm0tcHJpY2luZy1ib3ggLnByaWNlLWxhYmVse2NvbG9yOiNmZmY7cGFkZGluZzoxNXB4fS5tLXByaWNpbmctYm94IC5wcmljZS1sYWJlbCBoMXtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6NGVtO2ZvbnQtd2VpZ2h0OjQwMDttYXJnaW4tYm90dG9tOjIwcHg7bWFyZ2luLXRvcDo1cHh9Lm0tcHJpY2luZy1ib3ggLnByaWNlLWxhYmVsIGgxIHN1cHt0b3A6MDtmb250LXNpemU6LjJlbX0ubS1wcmljaW5nLWJveCAucGFuZWwtYm9keXtwYWRkaW5nOjB9Lm0tcHJpY2luZy1ib3ggLnBhbmVsLWJvZHkgdWx7cGFkZGluZzowIDE1cHh9Lm0tcHJpY2luZy1ib3ggLnBhbmVsLWJvZHkgbGl7Ym9yZGVyLWJvdHRvbToxcHggZGFzaGVkICMwMDA7cGFkZGluZzoxMHB4IDA7bGlzdC1zdHlsZTpub25lfS5tLXByaWNpbmctYm94IC5wYW5lbC1ib2R5IGxpOmxhc3QtY2hpbGR7Ym9yZGVyOm5vbmV9Lm0tcHJpY2luZy10YWJsZSAuZ2x5cGhpY29uLW9re2NvbG9yOiMzNzVkM2J9Lm0tcHJpY2luZy10YWJsZSB0ZDpmaXJzdC1jaGlsZCwubS1wcmljaW5nLXRhYmxlIHRoOmZpcnN0LWNoaWxke3RleHQtYWxpZ246bGVmdDt3aWR0aDoxNSV9Lm0tcHJpY2luZy10YWJsZSB0ZCwubS1wcmljaW5nLXRhYmxlIHRoe3dpZHRoOjI4JX0ubS1hZGQtaW5mb3tmb250LXNpemU6LjhlbTtvcGFjaXR5Oi41fS53ZWxse21hcmdpbi10b3A6MzBweDtwYWRkaW5nOjA7YmFja2dyb3VuZDojZmZmO2JvcmRlcjowO2JveC1zaGFkb3c6bm9uZX1oMnttYXJnaW46NDBweCAwfS5iZy1zZWN1bmRhcnktbGlnaHR7YmFja2dyb3VuZDojNDhiMWYwfS5iZy1wcmltYXJ5LWxpZ2h0e2JhY2tncm91bmQ6IzAwMzU3M30uYmctY29tYmktbGlnaHR7YmFja2dyb3VuZDojNWQ5ZDY0fS5wcmljZS1tb2R1bGV7bWFyZ2luOjVweCAwfS5wcmljZS1saXN0e2xpbmUtaGVpZ2h0OjMwcHg7bWFyZ2luOjB9LnByaWNlLWxpc3QgbGl7Ym9yZGVyLWJvdHRvbToxcHggZGFzaGVkICM2NzY3Njc7cGFkZGluZzoxMHB4IDB9LnByaWNlLWxpc3QgbGk6bGFzdC1jaGlsZHtib3JkZXI6bm9uZX0ucHJpY2VsYWJlbCwucHJpY2VsYWJlbC1hYW5iaWVkaW5ne2JhY2tncm91bmQ6IzEwN0ZDMjttYXJnaW4tbGVmdDotMTBweDttYXJnaW4tcmlnaHQ6LTEwcHg7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6I2ZmZjtmb250LXNpemU6MS4yZW07cGFkZGluZzoxMHB4IDB9LnByaWNlbGFiZWwtYWFuYmllZGluZ3twYWRkaW5nOjA7aGVpZ2h0OjQzcHh9LnByaWNlbGFiZWwtYWFuYmllZGluZyBzcGFuOmZpcnN0LWNoaWxke3RleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2h9LmFhbmJpZWRpbmctdGFne2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RyYW5zZm9ybTpyb3RhdGUoLTdkZWcpO2JhY2tncm91bmQ6I2Y5Y2Y1NDtjb2xvcjojMDAwO3BhZGRpbmc6NHB4IDhweDtmb250LXNpemU6MS40ZW19LnByZWZvb3Rlciwuc2Nyb2xsdXAsLnRleHQtd2hpdGV7Y29sb3I6I2ZmZn0ucHJpY2UtZnJlcXtmb250LXdlaWdodDo0MDB9Lm1vZHVsZS1wcmljZSwubW9kdWxlLXRpdGxle2ZvbnQtc2l6ZToxLjFlbTtmb250LXdlaWdodDo3MDB9Lm1vZHVsZS1wcmljZXtmbG9hdDpyaWdodDtmb250LXNpemU6MS4xZW19Lm1vZHVsZS1kZXNjcmlwdGlvbnttYXJnaW4tdG9wOjVweDtmb250LXNpemU6LjllbX0uc2Nyb2xsdXB7d2lkdGg6MzBweDtoZWlnaHQ6MzBweDtmb250LXNpemU6MjJweDtsaW5lLWhlaWdodDozMHB4O3RleHQtYWxpZ246Y2VudGVyO2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjpmaXhlZDtyaWdodDo0MHB4O2JvdHRvbTo0MHB4O2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMyl9LnNjcm9sbHVwOmJlZm9yZXtmb250LWZhbWlseTppY29tb29uO2NvbnRlbnQ6XCJcXGVkNzFcIn0uc2Nyb2xsdXA6Zm9jdXMsLnNjcm9sbHVwOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lfS5wcmVmb290ZXJ7YmFja2dyb3VuZDojMTA3RkMyO3BhZGRpbmc6MzBweH0ucHJlZm9vdGVyIGgze2NvbG9yOiNmZmY7Zm9udC1zaXplOjFlbTttYXJnaW46MTBweCAwfS5wcmVmb290ZXIgaDMuc3ViLXRpdGxle2ZvbnQtd2VpZ2h0OjMwMH1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDgwcHgpey52aWRlby1jb250YWluZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTk2cHh9LnVpLXRhYnt3aWR0aDoxMDAlfX0uZGVuby1mb290ZXItaW1hZ2V7d2lkdGg6MjIwcHg7ZmxvYXQ6cmlnaHQ7cGFkZGluZzo1cHg7bWFyZ2luOjEwcHggMjVweH0ucGFuZWwtZGVmYXVsdD4ucGFuZWwtaGVhZGluZy5wYW5lbC1oZWFkaW5nLXByaW1hcnl7YmFja2dyb3VuZDojMDAyOTU5O2JvcmRlcjpub25lfS5wYW5lbC1kZWZhdWx0Pi5wYW5lbC1oZWFkaW5nLnBhbmVsLWhlYWRpbmctc2VjdW5kYXJ5e2JhY2tncm91bmQ6IzEwN0ZDMjtib3JkZXI6bm9uZX0ucGFuZWwtZGVmYXVsdD4ucGFuZWwtaGVhZGluZy5wYW5lbC1oZWFkaW5nLWNvbWJpe2JhY2tncm91bmQ6IzM3NWQzYjtib3JkZXI6bm9uZX0ubS1zcGFjaW5nLWJvdHRvbXttYXJnaW4tYm90dG9tOjMwcHh9Lm0tc3BhY2luZy1wYWRkaW5ne3BhZGRpbmc6NTBweH0ubS10ZXh0LWxpbmV0aHJvdWdoe3RleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2h9XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OcGRHVXViV2x1TG1OemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRnpSVUVzYlVOQk0wTkJMRkZCYTBSRkxGTkJRVlVzVTBGelJGb3NhVUpCU1VVc2IwSkJha05CTEdGQmEwTkZMRmRCUVZrc1QwRjJTV2hDTEZsQlEwVXNWMEZCV1N4UlFVVmtMR05CUTBVc1YwRkJXU3hSUVVWa0xHTkJRMFVzVjBGQldTeE5RVU5hTEdsQ1FVRnJRaXg1UWtGRGJFSXNaMEpCUVdsQ0xFMUJRMnBDTEZGQlFWTXNTMEZCU3l4RlFVTmtMR2xDUVVORkxGZEJRVmtzUlVGRmFFSXNkVUpCUTBVc1VVRkJVeXhMUVVGTExFVkJSV2hDTEdsQ1FVTkZMRTFCUVU4c1RVRkRVQ3hQUVVGUkxFMUJRMUlzVDBGQlVTeEpRVUZKTEUxQlFVMHNTMEZEYkVJc1YwRkJXU3hGUVVGSkxFVkJRVWtzUzBGQlN5eEZRVUZKTEZGQlJTOUNMRk5CUTBVc1VVRkJVeXhGUVVWWUxGRkJRMFVzYlVKQlFXOUNMRWxCUVVrc1NVRkJUU3hMUVVNNVFpeG5Ra0ZCYVVJc1NVRkJTU3hKUVVGTkxFdEJRek5DTEdWQlFXZENMRWxCUVVrc1NVRkJUU3hMUVVNeFFpeGpRVUZsTEVsQlFVa3NTVUZCVFN4TFFVTjZRaXhYUVVGWkxFbEJRVWtzU1VGQlRTeExRVU4wUWl4WFFVRlpMRkZCUTFvc1YwRkJXU3hOUVVOYUxGRkJRVk1zWVVGRFZDeFhRVUZaTEV0QlExb3NUVUZCVHl4bFFVTlFMRlZCUVZjc1MwRkRXQ3haUVVGaExFbEJSMllzWlVGRFJTeFhRVUZaTEZGQlExb3NhVUpCUTBVc1RVRkJUeXhMUVVWWUxHTkJRMFVzVlVGQlZ5eE5RVU5ZTEZGQlFWTXNUVUZEVkN4UlFVRlRMRWxCUVVrc1JVRkJSU3hMUVVWcVFpeGpRVU5GTEdsQ1FVRnJRaXhSUVVWd1FpeFZRVU5GTEdkQ1FVRnBRaXhMUVVOcVFpeE5RVUZQTEV0QlExQXNVVUZCVXl4TFFVRkxMRVZCUTJRc1RVRkJUeXhMUVVOUUxGZEJRVmtzVFVGRFdpeFBRVUZSTEV0QlExSXNVVUZCVXl4TlFVVllMR0ZCUTBVc1pVRkJaMElzUzBGRGFFSXNhVUpCUTBVc1RVRkJUeXhKUVVOUUxGVkJRVmNzVFVGTFppeFZRVU5GTEZkQlFWa3NVVUZGWkN3NFFrRkRSU3hUUVVGVkxGTkJRMVlzVTBGQlZTeFBRVU5XTEZGQlFWTXNTMEZCU3l4RlFVVm9RaXc0UWtGRFJTeFRRVUZWTEU5QlExWXNUMEZCVVN4RlFVTlNMRkZCUVZNc1JVRkRWQ3hYUVVGWkxFdEJSV1FzYzBOQlEwVXNUVUZCVHl4TFFVTlFMRTFCUVU4c1RVRkRVQ3hQUVVGUkxFdEJSVllzVTBGRFJTeFhRVUZaTEV0QlExb3NZMEZCWlN4TFFVTm1MRmxCUTBVc1kwRkJaU3hMUVVWdVFpeFZRVU5GTEZGQlFWTXNTMEZEVkN4WFFVRlpMRWxCUTFvc1YwRkJXU3hSUVVOYUxHRkJRMFVzVFVGQlR5eFJRVWxZTERSQ1FVTkZMRTFCUVU4c1MwRkRVQ3hSUVVGVExFdEJRMVFzSzBKQlEwVXNVVUZCVXl4aFFVTlVMRlZCUVZjc1NVRkRXQ3haUVVGaExFbEJRMklzWTBGQlpTeExRVU5tTEZkQlFWa3NTVUZEV2l4dFEwRkRSU3hKUVVGTExFVkJRMHdzVlVGQlZ5eExRVVZxUWl3eVFrRkRSU3hSUVVGVExFVkJRMVFzT0VKQlEwVXNVVUZCVXl4RlFVRkZMRXRCUTJJc09FSkJRMFVzWTBGQlpTeEpRVUZKTEU5QlFVOHNTMEZETVVJc1VVRkJVeXhMUVVGTExFVkJRMlFzVjBGQldTeExRVU5hTEhsRFFVTkZMRmxCU1Vvc0swSkJRMFVzVFVGQlR5eFJRVWQzUWl4blEwRkJha01zWjBOQlEwVXNWMEZCV1N4TFFVTmFMRTFCUVU4c1NVRkRXU3h2UWtGQmNrSXNiMEpCUTBVc1RVRkJUeXhKUVVWWUxGbEJRMFVzVlVGQlZ5eExRVU5ZTEZGQlFWTXNSMEZIV0N4TlFVTkZMRmRCUVZrc1MwRkRXaXhSUVVGVExFVkJRMVFzVjBGQldTeExRVU5hTEU5QlFWRXNSVUZEVWl4WFFVRlpMRXRCUjJRc1IwRkRSU3hQUVVGUkxFdEJRVXNzUlVGSFppeHZRa0ZEUlN4WFFVRlpMRkZCUldRc2EwSkJRMFVzVjBGQldTeFJRVVZrTEdkQ1FVTkZMRmRCUVZrc1VVRkZaQ3hqUVVORkxFOUJRVkVzU1VGQlNTeEZRVVZrTEZsQlEwVXNXVUZCWVN4TFFVTmlMRTlCUVZFc1JVRkRVaXhsUVVORkxHTkJRV1VzU1VGQlNTeFBRVUZQTEZGQlF6RkNMRkZCUVZNc1MwRkJTeXhGUVVOb1Fpd3dRa0ZEUlN4WlFVVktMRmxCUVdFc2RVSkJRMWdzVjBGQldTeFJRVU5hTEZsQlFXRXNUVUZEWWl4aFFVRmpMRTFCUTJRc1YwRkJXU3hQUVVOYUxFMUJRVThzUzBGRFVDeFZRVUZYTEUxQlExZ3NVVUZCVXl4TFFVRkxMRVZCUldoQ0xIVkNRVU5GTEZGQlFWTXNSVUZEVkN4UFFVRlJMRXRCUTFJc2QwTkJRMFVzWjBKQlFXbENMR0ZCUlhKQ0xHZENRVU5GTEZGQlFWTXNZVUZEVkN4VlFVRlhMR05CUTFnc1YwRkJXU3hSUVVOYUxFMUJRVThzUzBGRFVDeFJRVUZUTEVsQlFVa3NTVUZEWWl4VlFVRlhMRTFCY1VOaUxGZEJjRUpCTEZWQk5FUkJMRmxCUTBVc1RVRkJUeXhMUVRWRlZDeFpRVU5GTEZsQlFXRXNTVUZGUVN4alFVRm1MR05CUTBVc1ZVRkJWeXhOUVVOWUxGbEJRV0VzU1VGRlppeGpRVU5GTEUxQlFVOHNUVUZEVUN4VlFVRlhMRTFCUldJc2IwSkJRMFVzVjBGQldTeEpRVU5hTEZWQlFWY3NTMEZGWWl4VlFVTkZMRTFCUVU4c1MwRkRVQ3hQUVVGUkxFdEJRMUlzVlVGQlZ5eExRVU5ZTEZsQlFXRXNTMEZEWWl4WFFVRlpMRTlCUTFvc1VVRkJVeXhMUVVOVUxGTkJRVlVzVFVGRFZpeE5RVUZQTEV0QlExQXNUMEZCVVN4TFFVTlNMRmRCUVZrc1pVRkhaQ3hwUWtGRFJTeFpRVUZoTEZGQlEySXNVVUZCVXl4UlFVVk5MR2RDUVVGcVFpeG5Ra0ZEUlN4blFrRkJhVUlzUzBGRmJrSXNWMEZEUlN4WFFVRlpMRkZCUTFvc1VVRkJVeXhMUVVWVUxHTkJRMFVzVFVGQlR5eExRVU5RTEZWQlFWY3NTVUZEV0N4UFFVRlJMRXRCUVVzc1JVRkRaaXgzUWtGRFJTeFpRVUZoTEVsQlNXcENMSGxEUVVORkxHbENRVU5GTEUxQlFVOHNTMEZEVUN4UFFVRlJMRTFCUTFZc1VVRkRSU3hOUVVGUExFMUJSVmdzYlVKQlEwVXNUVUZCVHl4TlFVTlFMRTFCUVU4c1RVRkRVQ3hSUVVGVExFbEJRMVFzVDBGQlVTeExRVUZMTEV0QlIyWXNiMFJCUTBVc1YwRkJXU3hSUVVOYUxGbEJSVVlzYzBSQlEwVXNWMEZCV1N4UlFVTmFMRmxCUlVZc2EwUkJRMFVzVjBGQldTeFJRVU5hTEZsQlQwWXNhMEpCUTBVc1kwRkJaU3hMUVVWcVFpeHRRa0ZEUlN4UlFVRlRMRXRCUjFnc2IwSkJRMFVzWjBKQlFXbENJaXdpWm1sc1pTSTZJbk5wZEdVdWJXbHVMbU56Y3lJc0luTnZkWEpqWlZKdmIzUWlPaUl2YzI5MWNtTmxMeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk1d1lYSjBhV3BsYmlBdWMybHRjR3g1TFhOamNtOXNiQzFqYjI1MFlXbHVaWElzTG5WcExYUmhZbnR3YjNOcGRHbHZianB5Wld4aGRHbDJaWDB1YlMxd2NtbGphVzVuTFhSaFlteGxMQzV0TFhCeWFXTnBibWN0ZEdGaWJHVWdkR2dzTG5CeWFXTmxZbTk0SUdnemUzUmxlSFF0WVd4cFoyNDZZMlZ1ZEdWeWZTNWlaeTF3Y21sdFlYSjVlMkpoWTJ0bmNtOTFibVE2SXpBd01qazFPWDB1WW1jdGMyVmpkVzVrWVhKNWUySmhZMnRuY205MWJtUTZJekV3TjBaRE1uMHVhVzUwY205a2RXTjBhVzl1ZTIxcGJpMW9aV2xuYUhRNk5EWXdjSGc3WW1GamEyZHliM1Z1WkMxcGJXRm5aVHAxY213b2FXMWhaMlZ6TDJKbkxXbHVkSEp2TG1wd1p5azdZbUZqYTJkeWIzVnVaQzF6YVhwbE9tTnZkbVZ5TzNCaFpHUnBibWM2TnpCd2VDQXdmUzVwYm5SeWIyUjFZM1JwYjI0Z2FERjdiV0Z5WjJsdUxYUnZjRG93ZlM1c2FYTjBMV05vWldOcmJXRnlheTFqYVhKamJHVjdjR0ZrWkdsdVp6b3hNSEI0SURCOUxuWnBaR1Z2TFdOdmJuUmhhVzVsY250M2FXUjBhRG8xTkRCd2VEdG9aV2xuYUhRNk16QXdjSGc3WW05eVpHVnlPakp3ZUNCemIyeHBaQ0FqWm1abU8ySnZlQzF6YUdGa2IzYzZNQ0F3SURFMWNIZ2dNQ0FqTmpjMk56WTNmUzUxYVMxMFlXSnplM0JoWkdScGJtYzZNSDB1ZFdrdGRHRmlleTEzWldKcmFYUXRkSEpoYm5OcGRHbHZianBoYkd3Z0xqTnpJR1ZoYzJVN0xXMXZlaTEwY21GdWMybDBhVzl1T21Gc2JDQXVNM01nWldGelpUc3RiWE10ZEhKaGJuTnBkR2x2YmpwaGJHd2dMak56SUdWaGMyVTdMVzh0ZEhKaGJuTnBkR2x2YmpwaGJHd2dMak56SUdWaGMyVTdkSEpoYm5OcGRHbHZianBoYkd3Z0xqTnpJR1ZoYzJVN1ltRmphMmR5YjNWdVpEb2paVEJsTUdVd08yMXBiaTFvWldsbmFIUTZNVEF3Y0hnN1pHbHpjR3hoZVRwcGJteHBibVV0WW14dlkyczdiR2x6ZEMxemRIbHNaVHB1YjI1bE8zZHBaSFJvT21OaGJHTW9NVEF3SlM4M0xqSXBPMlp2Ym5RdGMybDZaVG91T1dWdE8yWnZiblF0ZDJWcFoyaDBPamN3TUgwdWRXa3RkR0ZpTG1GamRHbDJaWHRpWVdOclozSnZkVzVrT2lNeE1EZEdReko5TG5WcExYUmhZaTVoWTNScGRtVWdZWHRqYjJ4dmNqb2pabVptZlM1MWFTMTBZV0lnTG1samIyNTdabTl1ZEMxemFYcGxPakV1T0dWdE8yUnBjM0JzWVhrNllteHZZMnM3Y0dGa1pHbHVaem80Y0hnZ01DQXhNbkI0ZlM1MWFTMTBZV0k2YUc5MlpYSjdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2pNVGs1WkdWamZTNTFhUzEwWVdJZ1lYdDBaWGgwTFdSbFkyOXlZWFJwYjI0NmJtOXVaVHRtYkc5aGREcHNaV1owTzNCaFpHUnBibWM2TVRWd2VDQXdPM2RwWkhSb09qRXdNQ1U3YldsdUxXaGxhV2RvZERveE1EQndlRHRvWldsbmFIUTZNVEF3SlR0a2FYTndiR0Y1T21Kc2IyTnJmUzUwWVdJdFkyOXVkR1Z1ZEh0d1lXUmthVzVuTFdKdmRIUnZiVG96TUhCNGZTNTBZV0l0WTI5dWRHVnVkQ0JwYldkN2QybGtkR2c2T0RBbE8yMXBiaTEzYVdSMGFEb3pNREJ3ZUgwdWNHRnlkR2xxWlc1N1ltRmphMmR5YjNWdVpEb2paamxtT1dZNWZTNXdZWEowYVdwbGJpQXVjMmx0Y0d4NUxYTmpjbTlzYkMxamJHbHdlM0J2YzJsMGFXOXVPbkpsYkdGMGFYWmxPMjkyWlhKbWJHOTNPbWhwWkdSbGJqdHdZV1JrYVc1bk9qUXdjSGdnTUgwdWNHRnlkR2xxWlc0Z0xuTnBiWEJzZVMxelkzSnZiR3d0YkdsemRIdHZkbVZ5Wm14dmR6cG9hV1JrWlc0N2JXRnlaMmx1T2pBN2NHRmtaR2x1Wnpvd08yeHBjM1F0YzNSNWJHVTZibTl1WlgwdWMybHRjR3g1TFhOamNtOXNiQ0F1YzJsdGNHeDVMWE5qY205c2JDMXNhWE4wSUd4cGUyWnNiMkYwT214bFpuUTdkMmxrZEdnNk1UWXdjSGc3YUdWcFoyaDBPall3Y0hoOUxuQnlhV05wYm1kN2JXRnlaMmx1TFhSdmNEbzFNSEI0TzIxaGNtZHBiaTFpYjNSMGIyMDZOekJ3ZUgwdWNISnBZMmx1WnlCb01udHRZWEpuYVc0dFltOTBkRzl0T2pNd2NIaDlMbkJ5YVdObFltOTRlM0JoWkdScGJtYzZNVEJ3ZUR0dFlYSm5hVzR0ZEc5d09qVndlRHRpWVdOclozSnZkVzVrT2lObFptVm1aV1o5TG5CeWFXTmxZbTk0SUdnemUyTnZiRzl5T2lNd01ESTVOVGw5TG0wdGNISnBZMmx1WnkxaWIzZ2dMbkJ5YVdObExXeGhZbVZzZTJOdmJHOXlPaU5tWm1ZN2NHRmtaR2x1WnpveE5YQjRmUzV0TFhCeWFXTnBibWN0WW05NElDNXdjbWxqWlMxc1lXSmxiQ0JvTVh0a2FYTndiR0Y1T21sdWJHbHVaUzFpYkc5amF6dG1iMjUwTFhOcGVtVTZOR1Z0TzJadmJuUXRkMlZwWjJoME9qUXdNRHR0WVhKbmFXNHRZbTkwZEc5dE9qSXdjSGc3YldGeVoybHVMWFJ2Y0RvMWNIaDlMbTB0Y0hKcFkybHVaeTFpYjNnZ0xuQnlhV05sTFd4aFltVnNJR2d4SUhOMWNIdDBiM0E2TUR0bWIyNTBMWE5wZW1VNkxqSmxiWDB1YlMxd2NtbGphVzVuTFdKdmVDQXVjR0Z1Wld3dFltOWtlWHR3WVdSa2FXNW5PakI5TG0wdGNISnBZMmx1WnkxaWIzZ2dMbkJoYm1Wc0xXSnZaSGtnZFd4N2NHRmtaR2x1Wnpvd0lERTFjSGg5TG0wdGNISnBZMmx1WnkxaWIzZ2dMbkJoYm1Wc0xXSnZaSGtnYkdsN1ltOXlaR1Z5TFdKdmRIUnZiVG94Y0hnZ1pHRnphR1ZrSUNNd01EQTdjR0ZrWkdsdVp6b3hNSEI0SURBN2JHbHpkQzF6ZEhsc1pUcHViMjVsZlM1dExYQnlhV05wYm1jdFltOTRJQzV3WVc1bGJDMWliMlI1SUd4cE9teGhjM1F0WTJocGJHUjdZbTl5WkdWeU9tNXZibVY5TG0wdGNISnBZMmx1WnkxMFlXSnNaU0F1WjJ4NWNHaHBZMjl1TFc5cmUyTnZiRzl5T2lNek56VmtNMko5TG0wdGNISnBZMmx1WnkxMFlXSnNaU0IwWkRwbWFYSnpkQzFqYUdsc1pDd3ViUzF3Y21samFXNW5MWFJoWW14bElIUm9PbVpwY25OMExXTm9hV3hrZTNSbGVIUXRZV3hwWjI0NmJHVm1kRHQzYVdSMGFEb3hOU1Y5TG0wdGNISnBZMmx1WnkxMFlXSnNaU0IwWkN3dWJTMXdjbWxqYVc1bkxYUmhZbXhsSUhSb2UzZHBaSFJvT2pJNEpYMHViUzFoWkdRdGFXNW1iM3RtYjI1MExYTnBlbVU2TGpobGJUdHZjR0ZqYVhSNU9pNDFmUzUzWld4c2UyMWhjbWRwYmkxMGIzQTZNekJ3ZUR0d1lXUmthVzVuT2pBN1ltRmphMmR5YjNWdVpEb2pabVptTzJKdmNtUmxjam93TzJKdmVDMXphR0ZrYjNjNmJtOXVaWDFvTW50dFlYSm5hVzQ2TkRCd2VDQXdmUzVpWnkxelpXTjFibVJoY25rdGJHbG5hSFI3WW1GamEyZHliM1Z1WkRvak5EaGlNV1l3ZlM1aVp5MXdjbWx0WVhKNUxXeHBaMmgwZTJKaFkydG5jbTkxYm1RNkl6QXdNelUzTTMwdVltY3RZMjl0WW1rdGJHbG5hSFI3WW1GamEyZHliM1Z1WkRvak5XUTVaRFkwZlM1d2NtbGpaUzF0YjJSMWJHVjdiV0Z5WjJsdU9qVndlQ0F3ZlM1d2NtbGpaUzFzYVhOMGUyeHBibVV0YUdWcFoyaDBPak13Y0hnN2JXRnlaMmx1T2pCOUxuQnlhV05sTFd4cGMzUWdiR2w3WW05eVpHVnlMV0p2ZEhSdmJUb3hjSGdnWkdGemFHVmtJQ00yTnpZM05qYzdjR0ZrWkdsdVp6b3hNSEI0SURCOUxuQnlhV05sTFd4cGMzUWdiR2s2YkdGemRDMWphR2xzWkh0aWIzSmtaWEk2Ym05dVpYMHVjSEpwWTJWc1lXSmxiQ3d1Y0hKcFkyVnNZV0psYkMxaFlXNWlhV1ZrYVc1bmUySmhZMnRuY205MWJtUTZJekV3TjBaRE1qdHRZWEpuYVc0dGJHVm1kRG90TVRCd2VEdHRZWEpuYVc0dGNtbG5hSFE2TFRFd2NIZzdkR1Y0ZEMxaGJHbG5ianBqWlc1MFpYSTdZMjlzYjNJNkkyWm1aanRtYjI1MExYTnBlbVU2TVM0eVpXMDdjR0ZrWkdsdVp6b3hNSEI0SURCOUxuQnlhV05sYkdGaVpXd3RZV0Z1WW1sbFpHbHVaM3R3WVdSa2FXNW5PakE3YUdWcFoyaDBPalF6Y0hoOUxuQnlhV05sYkdGaVpXd3RZV0Z1WW1sbFpHbHVaeUJ6Y0dGdU9tWnBjbk4wTFdOb2FXeGtlM1JsZUhRdFpHVmpiM0poZEdsdmJqcHNhVzVsTFhSb2NtOTFaMmg5TG1GaGJtSnBaV1JwYm1jdGRHRm5lMlJwYzNCc1lYazZhVzVzYVc1bExXSnNiMk5yTzNSeVlXNXpabTl5YlRweWIzUmhkR1VvTFRka1pXY3BPMkpoWTJ0bmNtOTFibVE2STJZNVkyWTFORHRqYjJ4dmNqb2pNREF3TzNCaFpHUnBibWM2TkhCNElEaHdlRHRtYjI1MExYTnBlbVU2TVM0MFpXMTlMbkJ5WldadmIzUmxjaXd1YzJOeWIyeHNkWEFzTG5SbGVIUXRkMmhwZEdWN1kyOXNiM0k2STJabVpuMHVjSEpwWTJVdFpuSmxjWHRtYjI1MExYZGxhV2RvZERvME1EQjlMbTF2WkhWc1pTMXdjbWxqWlN3dWJXOWtkV3hsTFhScGRHeGxlMlp2Ym5RdGMybDZaVG94TGpGbGJUdG1iMjUwTFhkbGFXZG9kRG8zTURCOUxtMXZaSFZzWlMxd2NtbGpaWHRtYkc5aGREcHlhV2RvZER0bWIyNTBMWE5wZW1VNk1TNHhaVzE5TG0xdlpIVnNaUzFrWlhOamNtbHdkR2x2Ym50dFlYSm5hVzR0ZEc5d09qVndlRHRtYjI1MExYTnBlbVU2TGpsbGJYMHVjMk55YjJ4c2RYQjdkMmxrZEdnNk16QndlRHRvWldsbmFIUTZNekJ3ZUR0bWIyNTBMWE5wZW1VNk1qSndlRHRzYVc1bExXaGxhV2RvZERvek1IQjRPM1JsZUhRdFlXeHBaMjQ2WTJWdWRHVnlPMlJwYzNCc1lYazZibTl1WlR0d2IzTnBkR2x2YmpwbWFYaGxaRHR5YVdkb2REbzBNSEI0TzJKdmRIUnZiVG8wTUhCNE8ySmhZMnRuY205MWJtUTZjbWRpWVNnd0xEQXNNQ3d1TXlsOUxuTmpjbTlzYkhWd09tSmxabTl5Wlh0bWIyNTBMV1poYldsc2VUcHBZMjl0YjI5dU8yTnZiblJsYm5RNlhDSmNYR1ZrTnpGY0luMHVjMk55YjJ4c2RYQTZabTlqZFhNc0xuTmpjbTlzYkhWd09taHZkbVZ5ZTNSbGVIUXRaR1ZqYjNKaGRHbHZianB1YjI1bGZTNXdjbVZtYjI5MFpYSjdZbUZqYTJkeWIzVnVaRG9qTVRBM1JrTXlPM0JoWkdScGJtYzZNekJ3ZUgwdWNISmxabTl2ZEdWeUlHZ3plMk52Ykc5eU9pTm1abVk3Wm05dWRDMXphWHBsT2pGbGJUdHRZWEpuYVc0Nk1UQndlQ0F3ZlM1d2NtVm1iMjkwWlhJZ2FETXVjM1ZpTFhScGRHeGxlMlp2Ym5RdGQyVnBaMmgwT2pNd01IMUFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNk5EZ3djSGdwZXk1MmFXUmxieTFqYjI1MFlXbHVaWEo3ZDJsa2RHZzZNVEF3SlR0b1pXbG5hSFE2TVRrMmNIaDlMblZwTFhSaFludDNhV1IwYURveE1EQWxmWDB1WkdWdWJ5MW1iMjkwWlhJdGFXMWhaMlY3ZDJsa2RHZzZNakl3Y0hnN1pteHZZWFE2Y21sbmFIUTdjR0ZrWkdsdVp6bzFjSGc3YldGeVoybHVPakV3Y0hnZ01qVndlSDB1Y0dGdVpXd3RaR1ZtWVhWc2RENHVjR0Z1Wld3dGFHVmhaR2x1Wnk1d1lXNWxiQzFvWldGa2FXNW5MWEJ5YVcxaGNubDdZbUZqYTJkeWIzVnVaRG9qTURBeU9UVTVPMkp2Y21SbGNqcHViMjVsZlM1d1lXNWxiQzFrWldaaGRXeDBQaTV3WVc1bGJDMW9aV0ZrYVc1bkxuQmhibVZzTFdobFlXUnBibWN0YzJWamRXNWtZWEo1ZTJKaFkydG5jbTkxYm1RNkl6RXdOMFpETWp0aWIzSmtaWEk2Ym05dVpYMHVjR0Z1Wld3dFpHVm1ZWFZzZEQ0dWNHRnVaV3d0YUdWaFpHbHVaeTV3WVc1bGJDMW9aV0ZrYVc1bkxXTnZiV0pwZTJKaFkydG5jbTkxYm1RNkl6TTNOV1F6WWp0aWIzSmtaWEk2Ym05dVpYMHViUzF6Y0dGamFXNW5MV0p2ZEhSdmJYdHRZWEpuYVc0dFltOTBkRzl0T2pNd2NIaDlMbTB0YzNCaFkybHVaeTF3WVdSa2FXNW5lM0JoWkdScGJtYzZOVEJ3ZUgwdWJTMXpjR0ZqYVc1bmUyMWhjbWRwYmpvMWNIaDlMbTB0ZEdWNGRDMXNhVzVsZEdoeWIzVm5hSHQwWlhoMExXUmxZMjl5WVhScGIyNDZiR2x1WlMxMGFISnZkV2RvZlZ4dUx5b2pJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVRwaGNIQnNhV05oZEdsdmJpOXFjMjl1TzJKaGMyVTJOQ3hsZVVveVdsaEtlbUZYT1hWSmFtOTZURU5LZW1JelZubFpNbFo2U1dwd1lrbHVUbkJrUjFWMVlsZHNkVXh0VG5wamVVcGtURU5LZFZsWE1XeGplVWsyVnpFd2MwbHRNV2hqU0VKd1ltMWtla2xxYjJsUlZVWjZVbFZGYzJKVlRrSk5NRTVDVEVaR1FtRXdVa1pNUms1Q1VWWlZjMVV3Um5wU1JtOXpZVlZLUWxOVlZYTmlNRXBDWVd0T1FreEhSa0poTUU1R1RFWmtRbEZXYTNOVU1FWXlVMWRvUTB4R2JFSlJNRlZ6VmpCR1FsZFRlRkpSVlZaclRFZE9RbEV3VlhOV01FWkNWMU40VWxGVlZtdE1SMDVDVVRCVmMxWXdSa0pYVTNoT1VWVk9ZVXhIYkVOUlZVWnlVV2w0TlZGclJrUmlSVWx6V2pCS1FsRlhiRU5NUlRGQ1VUSndRMHhHUmtKUlZrMXpVekJHUWxONWVFWlJWVTVyVEVkc1ExRlZUa1pNUm1SQ1VWWnJjMUpWUmtaaFJVbHpaRlZLUWxFd1ZYTlZWVVpDVlhsNFRGRlZSa3hNUlZaQ1VsZG9RMHhIYkVOUlZVNUdURVV4UWxGVk9ITlVWVVpFVlVONFVGRlZSbEpNUlRGQ1VURkpjMVF3UmtKVlUzaEtVVlZHU2t4Rk1VSlJWVEJ6VXpCR1JHSkZTWE5XTUVaQ1YxTjRSbEZWUmtwTVJWWkNVVlZyYzFNd1JrSlRlWGhHVVZWR1NreEdSa0pTVXpsRFRFWk9RbEV3VlhOVlZVWkNWWGw0UmxGVlZsbE1Sa1pDVVRCVmMySlZTa0pSVnpsRFRFVnNRbEZWYTNOVFZVWkNWRk40VEZGVlRUVlJhWGh1VVd0R1FtRlZTWE5UVlVaQ1UxTjRTbEZWUms1TVJYUkNVWHBPUTB4SFZrSlJWMlJEVEVWc1FsRlZhM05UVlVaQ1ZGTjRURkZWVFhoUmFYaHFVVlZHYkV4RmJFSlJWV3R6VTFWR1FsUlRlRXhSVlU0MlVXbDRXRkZWUmxwTVJXeENVVlZyYzFOVlJrSlVVM2hNVVZWT01GRnBlRmhSVlVaYVRFWkdRbEV4YjNOV01FWkNWMU40VGxGVlRtRk1Sa1pDVVZaTmMxbFZSa1JXUTNoWVVWVkdXa3hGZEVKUk1XOXpWRlZHUWxSNWVHeFJWVTVSVEVaV1FsRldZM05UTUVaRVYwTjRXbEZWUm1oTVJXeENVakpaYzFwVlJrUlNVM2hZVVZWR1dreEdSa0pSTVc5ellWVktRbEV3VlhOVVZVWkNWSGw0VEZGVlZsbE1SMDVDVVRCVmMxWlZSa0pXZVhoT1VWVk9XVXhHUmtKUlZrMXpWRlZHUkZaRGVGSlJWVVpVVEVWc1FsRlZhM05TVlVaQ1VsTjRURkZWVm5GUmFYaHFVVlZPUmt4SGJFTlJWVVp5VVdsNFVsRlZWbmRSYVhoV1VWVk9Sa3hIWkVOUlZVWndVV2w0VEZGVlRuRlJhWGhPVVZWR1VFeEZkRUpSTVVGelZWVkdRbFY1ZUV4UlZVWk1URVZXUWxFeVVYTlVWVVpDVkhsNFRGRlZUbEZNUm1SQ1VWWnJjMVJWUmtSWGFYaFFVVlZHVWt4RmRFSlJNVWx6VlZWR1FsVjVlRTVSVlZaWlRFZEdRbEV3VlhOYVZVWkNXakJKYzFNd1JrUmhSVWx6WVZWS1FsRXdWWE5VVlVaQ1ZIbDRTbEZWVGxGTVJsWkNVVlpqYzFSVlJreGFhWGhXVVZWT1JreEdaRUpSVm10elZWVkdSbHBEZHpSUmEwWkVVbE40VkZGVlJsWk1SazVDVVRGWmMxVXdSa0pXVTNoUVVWVk9WMHhHUmtKUlZrMXpVekJHUWxONWVFWlJWVlp2VVdsM05GRnJSa1JTVTNoVVVWVkdWa3hGT1VKUk1WbHpWREJHUWxWVGVFWlJWVTVUVEVaR1FsRldUWE5TVlVaRVZrTjRXRkZWUmxwTVJYUkNVbGRSYzJNd1RrSlJNRlZ6VkZWR1FsUjVlRXhSVlU1UlRFVXhRbEZWT0hOVVZVWkVWVU40VUZGVlJsSk1SWFJDVWxaWmMxVXdSa1JTVTNoWVVWVkdXa3hGZEVKUk1XOXpXVEJHUWxwVGVFeFJWVTV0VEVac1FsRXdWWE5aTUVaQ1dsTjRURkZWVm5WUmFYaFdVVlZPUmt4R1JrSlJWazF6VXpCR1JGWkRlRmhSVlVaYVRFVnNRbEV4YjNOV01FWkNWMU40VWxGVlRtRk1SMFpDVVRCVmMxUlZSa0pVZVhoU1VWVnNXVXhFVWtOUlZVNUdURVV4UWxGVk9ITlRNRVpFVlVONFVsRlZSbFJNUlhSQ1VURlJjMHN3U2tKUk1GVnpWVlZHUWxWNWVHaFJWVTVWVEVaV1FsRldZM05UVlVaRVYwTjRXbEZWUm1oTVJXeENVVEpKYzFrd1JrSmFVM2hNVVZWT2JVeEdaRUpSVm10elUxVkdSRmRwZUhSUk1FWkVVbE40U2xGVlJreE1SVlpDVVRCM2MxWlZSa0pXZVhoTVVWVldjVkZwZDNsUmEwWkVVbE40VWxGVlJsUk1SVlpDVVRGUmMwOUZTa0pSTUZWelZWVkdRbFY1ZUVaUlZVWkdURVYwUWxFeVNYTlBSVXBDVVRCVmMxa3dSa0phVTNoS1VWVkdTa3hGT1VKUlZUaHpVekJHUkUxVlNYTlZWVVpDVlhsNFRGRlZSa3hNUlZaQ1VUSlJjMVl3UmtKWFUzaE1VVlZPWVV4SWJFUlJWVTVHVEVac1FsTlZiM05MTUVwQ1VUQlZjMVJWUmtKVWVYaFNVVlZrTTFGcGVHNVJNRVpDWVd0TmMxb3dUa0pSTUZWelZqQkdRbGRUZUV4UlZVNWhURVV4UWxGVk9ITlRWVVpFVjFONGRsRnJSa0pqYTBsellqQktRbEV3VlhOVVZVWkNWSGw0U2xGVlZsbE1SbXhDVVRCVmMxWlZSa0pXZVhoTVVWVk9XVXhHUmtKUlZrMXpVakJHU0ZkRGVFNVJWVTVHVEVaa1FsRldhM05UTUVaRVYybDRVbEZWUmxSTVJWWkNVVEZSYzFZd1JrSlhVM2hNVVZWT1lVeEZPVUpSVmtWelVsVkdSRlZwZUZoUlZVWmFURVYwUWxJeVVYTlNNRVpFVWxONFVGRlZSbEpNUlhSQ1VWVnpjMUpWUmtoYWFYaDJVV3RHUkZKVGVGaFJWVVphVEVaR1FsSlhVWE5oTUVwQ1VUQlZjMVl3UmtKWFUzaFNVVlZXYTB4SFpFTlJWVTVHVEVaa1FsRldhM05WVlVaR1drTjRhbEZWVGtaTVJUbENVVlpGYzFOVlJrSlRVM2hHVVZWV2EweEdiRUpSTUZWelYxVkdRbGxUZUV4UlZVNXBURVU1UWxGV1JYTlNWVVpFVldsNGJGRlZUa1pNUjA1Q1VWZFZjMU5WUmtKVFUzaFFVVlZHVUV4R1JrSlJla1pEVEVaR1FsRldUWE5UTUVaQ1UzbDRSbEZWVG05UmFYZDNVV3RHUkZKVGVGcFJWVlpMVEVac1FsRlhSWE5rVlVwQ1VURm5jMVl3UmtKWFUzaFNVVlZPWVV4R2JFSlJWMFZ6VkZWR1JGbHBlR2hSVlVacVRFVXhRbEV5VVhOV01FWkNWMU40VUZGVlRtRk1SVEZDVVZVNGMxTXdSa1JWUTNoV1VWVkdXRXhGTVVKUk1XZHpWVlZHUWxWNWVFeFJWVVpNVEVWV1FsSlhhRU5NU0ZaRFVWVk9Sa3hHUmtKUlZrMXpVbFZHUkZaRGVGQlJWVVpTVEVWMFFsRXhTWE5rTUU1Q1VUQlZjMW93U2tKUlYyeERURWRHUWxKWVNrTk1SMlJEVVZWT1JreEdSa0pSVmsxeldWVkdSRlpEZUZaUlZVWllURWRPUWxFeFozTldNRVpDVjFONFVsRlZUbUZNUlRGQ1VWVTRjMU13UmtSVlEzaFNVVlZHVkV4RmJFSlJWV3R6VTFWR1JGbHBlRlpSVlVaWVRFVXhRbU5WVG1sTVJtUkNZMFZLUWt4R1ZrSk9SVkpDVEVac1FsRXdWWE5VVlVaQ1ZIbDRURkZVVmtaV1EzaGFVVlZPUmt4R2JFSlJWMFZ6VTFWR1JsRlRlR3BSVlVadFRFZE9RbEV3VlhOV1ZVWkNWbmw0VGxGVlRsbE1SbXhDVVZkRmMxTlZSa1phYVhocVVWVk9Sa3hGTVVKUlZUaHpWRlZHUkZWRGVGWlJWVVpZVEVVeFFsSlhTWE5pTUVwQ1VUQlZjMVl3UmtKWFUzaEtVVlZPWVV4R1ZrSlJWbU56VXpCR1JsbHBlRlpSVlU1R1RFVXhRbEZWT0hOVE1FWkVWVU40VUZGVlJsSk1SWFJDVVRGSmMxWlZSa0pXZVhoTVVWVk9XVXhHYkVKUlYwVnpVekJHUkZscGVGaFJWVVphVEVVNVFsRXhiM05WVlVaQ1ZYbDRURkZWVGxWTVJrNUNVVlpWYzFSVlJrUldhWGhPVVZWR1VFeEZkRUpSTVVGelZEQkdRbFZUZUV4UlZVNVRURVprUWxGV2EzTmFWVVpJV2tONGNGRnJSa1JTVTNoYVVWVkdhRXhHUmtKUk1rbHpWVlZHUWxWNWVGSlJWVlpPVEVka1ExRlZSbkZSYVhodVVXdEdSRkpUZUc1UmEwWkNZVlZKYzFNd1JrWmlhMGx6VmpCR1JGSlRlRmhSVlVaYVRFWkdRbEV4YjNOVlZVWkNWWGw0VEZGVlZsVk1SMDVDVVRCVmMxUlZSa0pVZVhoTVVWVk9VVXhHVmtKUlZtTnpVMVZHUkZkRGVGQlJWVVpTVEVWMFFsRlZjM05TVlVaRVdtbDRNMUZyUmtSU1UzaGFVVlZHYUV4RmJFSlRWM0JEVEVoc1JGRlZUa1pNUjJ4RFVWVk9Sa3hGTVVKUlZUaHpVekJHUkZWRGVGQlJWVVpTVEVVeFFsRXhXWE5WVlVaRVVsTjRUbEZWUmxCTVJURkNVbFpuYzJKVlNrSlJNRlZ6VkZWR1FsUjVlRTVSVlU1UlRFVXhRbEZWT0hOVVZVWkVWVU40VWxGVlJsUk1SV3hDVVRGUmMxUXdSa0pWVTNoTVVWVkdURXhGZEVKU01sbHpZakJTUWxFd1ZYTldNRVpDVjFONFVsRlZUbUZNUm14Q1VsVlpjMk13VWtKUk1GVnpWakJHUWxkVGVGSlJWVTVoVEVac1FsSlZXWE5oTUZKQ1VUQlZjMVl3UmtKWFUzaFNVVlZPWVV4R2JFSlVNRmx6WVRCS1FsRXdWWE5aTUVaQ1dsTjRURkZWVm5GUmFYaDBVV3RHUkZKVGVGSlJWVVpVVEVWMFFsSldaM05XTUVaRVVsTjRVRkZWUmxKTVJXeENVakZaYzJJd1NrSlJNRlZ6V2pCS1FsRlhiRU5KYVhkcFdtMXNjMXBUU1RaSmJrNXdaRWRWZFdKWGJIVk1iVTU2WTNsSmMwbHVUblprV0VwcVdsWktkbUl6VVdsUGFVbDJZekk1TVdOdFRteE1lVWx6U1c1T2RtUllTbXBhV0U1RVlqSTFNRnBYTlRCSmFuQmlTV2sxZDFsWVNqQmhWM0JzWW1sQmRXTXliSFJqUjNnMVRGaE9hbU50T1hOaVF6RnFZakkxTUZsWGJIVmFXRWx6VEc1V2NFeFlVbWhaYm5SM1lqTk9jR1JIYkhaaWFuQjVXbGQ0YUdSSGJESmFXREIxWWxNeGQyTnRiR3BoVnpWdVRGaFNhRmx0ZUd4TVF6VjBURmhDZVdGWFRuQmliV04wWkVkR2FXSkhWV2RrUjJkelRHNUNlV0ZYVG14WmJUazBTVWRuZW1VelVteGxTRkYwV1ZkNGNGb3lORFpaTWxaMVpFZFdlV1pUTldsYWVURjNZMjFzZEZsWVNqVmxNa3BvV1RKMGJtTnRPVEZpYlZFMlNYcEJkMDFxYXpGUFdEQjFXVzFqZEdNeVZtcGtWelZyV1ZoS05XVXlTbWhaTW5SdVkyMDVNV0p0VVRaSmVrVjNUakJhUkUxdU1IVmhWelV3WTIwNWEyUlhUakJoVnpsMVpUSXhjR0pwTVc5YVYyeHVZVWhSTms1RVdYZGpTR2MzV1cxR2FtRXlaSGxpTTFaMVdrTXhjR0pYUm01YVZIQXhZMjEzYjJGWE1XaGFNbFo2VERKS2JreFhiSFZrU0VwMlRHMXdkMXA1YXpkWmJVWnFZVEprZVdJelZuVmFRekY2WVZod2JFOXRUblprYlZaNVR6TkNhRnBIVW5CaWJXTTJUbnBDZDJWRFFYZG1VelZ3WW01U2VXSXlVakZaTTFKd1lqSTBaMkZFUmpkaVYwWjVXakpzZFV4WVVuWmpSRzkzWmxNMWMyRllUakJNVjA1dldsZE9jbUpYUm5saGVURnFZVmhLYW1KSFZqZGpSMFpyV2tkc2RWcDZiM2hOU0VJMFNVUkNPVXh1V25CYVIxWjJURmRPZG1KdVVtaGhWelZzWTI1ME0yRlhVakJoUkc4eFRrUkNkMlZFZEc5YVYyeHVZVWhSTmsxNlFYZGpTR2MzV1cwNWVWcEhWbmxQYWtwM1pVTkNlbUl5ZUhCYVEwRnFXbTFhYlU4eVNuWmxRekY2WVVkR2EySXpZelpOUTBGM1NVUkZNV05JWjJkTlEwRnFUbXBqTWs1NldUTm1VelV4WVZNeE1GbFhTbnBsTTBKb1drZFNjR0p0WXpaTlNEQjFaRmRyZEdSSFJtbGxlVEV6V2xkS2NtRllVWFJrU0Vwb1ltNU9jR1JIYkhaaWFuQm9Za2QzWjB4cVRucEpSMVpvWXpKVk4weFhNWFpsYVRFd1kyMUdkV015YkRCaFZ6bDFUMjFHYzJKRFFYVk5NMDFuV2xkR2VscFVjM1JpV0UxMFpFaEthR0p1VG5Ca1IyeDJZbXB3YUdKSGQyZE1hazU2U1VkV2FHTXlWVGRNVnpoMFpFaEthR0p1VG5Ca1IyeDJZbXB3YUdKSGQyZE1hazU2U1VkV2FHTXlWVGRrU0Vwb1ltNU9jR1JIYkhaaWFuQm9Za2QzWjB4cVRucEpSMVpvWXpKVk4xbHRSbXBoTW1SNVlqTldkVnBFYjJwYVZFSnNUVWRWZDA4eU1YQmlhVEZ2V2xkc2JtRklVVFpOVkVGM1kwaG5OMXBIYkhwalIzaG9aVlJ3Y0dKdGVIQmliVlYwV1cxNGRsa3ljemRpUjJ4NlpFTXhlbVJJYkhOYVZIQjFZakkxYkU4elpIQmFTRkp2VDIxT2FHSkhUVzlOVkVGM1NsTTRNMHhxU1hCUE1scDJZbTVSZEdNeWJEWmFWRzkxVDFkV2RFOHlXblppYmxGMFpESldjRm95YURCUGFtTjNUVWd3ZFdSWGEzUmtSMFpwVEcxR2FtUkhiREphV0hScFdWZE9jbG96U25aa1Z6VnJUMmxOZUUxRVpFZFJla281VEc1V2NFeFlVbWhaYVRWb1dUTlNjR1J0VldkWldIUnFZako0ZG1OcWIycGFiVnB0WmxNMU1XRlRNVEJaVjBsblRHMXNhbUl5TlRkYWJUbDFaRU14ZW1GWWNHeFBha1YxVDBkV2RFOHlVbkJqTTBKeldWaHJObGx0ZUhaWk1uTTNZMGRHYTFwSGJIVmFlbTgwWTBoblowMURRWGhOYmtJMFpsTTFNV0ZUTVRCWlYwazJZVWM1TWxwWVNqZFpiVVpxWVRKa2VXSXpWblZhUXpGcVlqSjRkbU5xYjJwTlZHczFXa2RXYW1aVE5URmhVekV3V1ZkSloxbFlkREJhV0dnd1RGZFNiRmt5T1hsWldGSndZakkwTm1KdE9YVmFWSFJ0WWtjNWFHUkVjSE5hVjFvd1R6TkNhRnBIVW5CaWJXTTJUVlJXZDJWRFFYZFBNMlJ3V2toU2IwOXFSWGROUTFVM1lsZHNkVXhYYUd4aFYyUnZaRVJ2ZUUxRVFuZGxSSFJ2V2xkc2JtRklVVFpOVkVGM1NsUjBhMkZZVG5kaVIwWTFUMjFLYzJJeVRuSm1VelV3V1ZkSmRGa3lPWFZrUjFaMVpFaDBkMWxYVW10aFZ6VnVURmRLZG1SSVVuWmlWRzk2VFVoQ05HWlROVEJaVjBsMFdUSTVkV1JIVm5Wa1EwSndZbGRrTjJReWJHdGtSMmMyVDBSQmJFOHlNWEJpYVRFellWZFNNR0ZFYjNwTlJFSjNaVWd3ZFdOSFJubGtSMnh4V2xjMU4xbHRSbXBoTW1SNVlqTldkVnBFYjJwYWFteHRUMWRaTldaVE5YZFpXRW93WVZkd2JHSnBRWFZqTW14MFkwZDROVXhZVG1wamJUbHpZa014YW1KSGJIZGxNMEoyWXpKc01HRlhPWFZQYmtwc1lrZEdNR0ZZV214UE1qa3lXbGhLYldKSE9UTlBiV2h3V2tkU2JHSnFkSGRaVjFKcllWYzFiazlxVVhkalNHZG5UVWd3ZFdOSFJubGtSMnh4V2xjMFoweHVUbkJpV0VKelpWTXhlbGt6U25aaVIzZDBZa2RzZW1SSWRIWmtiVlo1V20xNGRtUjZjRzloVjFKcldsYzBOMkpYUm5sYU1teDFUMnBCTjJOSFJtdGFSMngxV25wdmQwOHllSEJqTTFGMFl6TlNOV0pIVlRaaWJUbDFXbGd3ZFdNeWJIUmpSM2cxVEZoT2FtTnRPWE5pUTBGMVl6SnNkR05IZURWTVdFNXFZMjA1YzJKRE1YTmhXRTR3U1VkNGNHVXlXbk5pTWtZd1QyMTRiRnB1VVRka01teHJaRWRuTmsxVVdYZGpTR2MzWVVkV2NGb3lhREJQYWxsM1kwaG9PVXh1UW5saFYwNXdZbTFrTjJKWFJubGFNbXgxVEZoU2RtTkViekZOU0VJMFR6SXhhR050WkhCaWFURnBZak5TTUdJeU1EWk9la0ozWlVnd2RXTklTbkJaTW14MVdubENiMDF1ZEhSWldFcHVZVmMwZEZsdE9UQmtSemwwVDJwTmQyTklhRGxNYmtKNVlWZE9iRmx0T1RSbE0wSm9Xa2RTY0dKdFl6Wk5WRUozWlVSMGRGbFlTbTVoVnpSMFpFYzVkMDlxVm5kbFJIUnBXVmRPY2xvelNuWmtWelZyVDJsT2JGcHRWbTFhVjFvNVRHNUNlV0ZYVG14WmJUazBTVWRuZW1VeVRuWmlSemw1VDJsTmQwMUVTVFZPVkd3NVRHMHdkR05JU25CWk1teDFXbmt4YVdJeloyZE1ia0o1WVZkT2JFeFhlR2haYlZaelpUSk9kbUpIT1hsUGFVNXRXbTFaTjJOSFJtdGFSMngxV25wdmVFNVlRalJtVXpWMFRGaENlV0ZYVG5CaWJXTjBXVzA1TkVsRE5YZGpiV3hxV2xNeGMxbFhTbXhpUTBKdlRWaDBhMkZZVG5kaVIwWTFUMjFzZFdKSGJIVmFVekZwWWtjNWFtRjZkRzFpTWpVd1RGaE9jR1Z0VlRaT1IxWjBUekphZG1KdVVYUmtNbFp3V2pKb01FOXFVWGROUkhSMFdWaEtibUZYTkhSWmJUa3daRWM1ZEU5cVNYZGpTR2MzWWxkR2VWb3liSFZNV0ZKMlkwUnZNV05JYURsTWJUQjBZMGhLY0ZreWJIVmFlVEZwWWpObloweHVRbmxoVjA1c1RGZDRhRmx0Vm5OSlIyZDRTVWhPTVdOSWREQmlNMEUyVFVSMGJXSXlOVEJNV0U1d1pXMVZOa3hxU214aVdEQjFZbE14ZDJOdGJHcGhWelZ1VEZkS2RtVkRRWFZqUjBaMVdsZDNkRmx0T1d0bFdIUjNXVmRTYTJGWE5XNVBha0k1VEcwd2RHTklTbkJaTW14MVdua3hhV0l6WjJkTWJrSm9ZbTFXYzB4WFNuWmFTR3RuWkZkNE4yTkhSbXRhUjJ4MVducHZkMGxFUlRGalNHZzVURzB3ZEdOSVNuQlpNbXgxV25reGFXSXpaMmRNYmtKb1ltMVdjMHhYU25aYVNHdG5Za2RzTjFsdE9YbGFSMVo1VEZkS2RtUklVblppVkc5NFkwaG5aMXBIUm5waFIxWnJTVU5OZDAxRVFUZGpSMFpyV2tkc2RWcDZiM2hOU0VJMFNVUkJOMkpIYkhwa1F6RjZaRWhzYzFwVWNIVmlNalZzWmxNMWRFeFlRbmxoVjA1d1ltMWpkRmx0T1RSSlF6VjNXVmMxYkdKRE1XbGlNbEkxU1VkNGNFOXRlR2hqTTFGMFdUSm9jR0pIVWpkWmJUbDVXa2RXZVU5dE5YWmliVlk1VEcwd2RHTklTbkJaTW14MVdua3hNRmxYU25OYVUwRjFXako0TldOSGFIQlpNamwxVEZjNWNtVXlUblppUnpsNVQybE5lazU2Vm10Tk1rbzVURzB3ZEdOSVNuQlpNbXgxV25reE1GbFhTbk5hVTBJd1drUndiV0ZZU25wa1F6RnFZVWRzYzFwRGQzVmlVekYzWTIxc2FtRlhOVzVNV0ZKb1dXMTRiRWxJVW05UGJWcHdZMjVPTUV4WFRtOWhWM2hyWlROU2JHVklVWFJaVjNod1dqSTBObUpIVm0xa1JIUXpZVmRTTUdGRWIzaE9VMVk1VEcwd2RHTklTbkJaTW14MVdua3hNRmxYU25OYVUwSXdXa04zZFdKVE1YZGpiV3hxWVZjMWJreFlVbWhaYlhoc1NVaFNiMlV6WkhCYVNGSnZUMnBKTkVwWU1IVmlVekZvV2tkUmRHRlhOVzFpTTNSdFlqSTFNRXhZVG5CbGJWVTJUR3BvYkdKVWRIWmpSMFpxWVZoU05VOXBOREZtVXpVeldsZDRjMlV5TVdoamJXUndZbWt4TUdJelFUWk5la0ozWlVSMGQxbFhVbXRoVnpWdVQycEJOMWx0Um1waE1tUjVZak5XZFZwRWIycGFiVnB0VHpKS2RtTnRVbXhqYW05M1R6SktkbVZETVhwaFIwWnJZak5qTm1KdE9YVmFXREZ2VFc1MGRGbFlTbTVoVnpRMlRrUkNkMlZEUVhkbVV6VnBXbmt4ZWxwWFRqRmliVkpvWTI1cmRHSkhiRzVoU0ZJM1dXMUdhbUV5WkhsaU0xWjFXa1J2YWs1RWFHbE5WMWwzWmxNMWFWcDVNWGRqYld4MFdWaEtOVXhYZUhCYU1tZ3daVEpLYUZreWRHNWpiVGt4WW0xUk5rbDZRWGROZWxVelRUTXdkVmx0WTNSWk1qbDBXVzFyZEdKSGJHNWhTRkkzV1cxR2FtRXlaSGxpTTFaMVdrUnZhazVYVVRWYVJGa3dabE0xZDJOdGJHcGFVekYwWWpKU01XSkhWamRpVjBaNVdqSnNkVTlxVm5kbFEwRjNabE0xZDJOdGJHcGFVekZ6WVZoT01HVXllSEJpYlZWMFlVZFdjRm95YURCUGFrMTNZMGhuTjJKWFJubGFNbXgxVDJwQ09VeHVRbmxoVjA1c1RGZDRjR016VVdkaVIydzNXVzA1ZVZwSFZubE1WMHAyWkVoU2RtSlViM2hqU0dkbldrZEdlbUZIVm10SlEwMHlUbnBaTTA1cVl6ZGpSMFpyV2tkc2RWcDZiM2hOU0VJMFNVUkNPVXh1UW5saFYwNXNURmQ0Y0dNelVXZGlSMnMyWWtkR2VtUkRNV3BoUjJ4eldraDBhV0l6U210YVdFazJZbTA1ZFZwWU1IVmpTRXB3V1RKV2MxbFhTbXhpUTNkMVkwaEtjRmt5Vm5OWlYwcHNZa014YUZsWE5XbGhWMVpyWVZjMWJtVXlTbWhaTW5SdVkyMDVNV0p0VVRaSmVrVjNUakJhUkUxcWRIUlpXRXB1WVZjMGRHSkhWbTFrUkc5MFRWUkNkMlZFZEhSWldFcHVZVmMwZEdOdGJHNWhTRkUyVEZSRmQyTklaemRrUjFZMFpFTXhhR0pIYkc1aWFuQnFXbGMxTUZwWVNUZFpNamx6WWpOSk5ra3lXbTFhYW5SdFlqSTFNRXhZVG5CbGJWVTJUVk0wZVZwWE1EZGpSMFpyV2tkc2RWcDZiM2hOU0VJMFNVUkNPVXh1UW5saFYwNXNZa2RHYVZwWGQzUlpWMFoxV1cxc2JGcEhiSFZhTTNSM1dWZFNhMkZYTlc1UGFrRTNZVWRXY0ZveWFEQlBhbEY2WTBob09VeHVRbmxoVjA1c1lrZEdhVnBYZDNSWlYwWjFXVzFzYkZwSGJIVmFlVUo2WTBkR2RVOXRXbkJqYms0d1RGZE9iMkZYZUd0bE0xSnNaVWhSZEZwSFZtcGlNMHBvWkVkc2RtSnFjSE5oVnpWc1RGaFNiMk50T1RGYU1tZzVURzFHYUdKdFNuQmFWMUp3WW0xamRHUkhSbTVsTWxKd1l6TkNjMWxZYXpaaFZ6VnpZVmMxYkV4WFNuTmlNazV5VHpOU2VWbFhOWHBhYlRsNVlsUndlV0l6VW1oa1IxVnZURlJrYTFwWFkzQlBNa3BvV1RKMGJtTnRPVEZpYlZFMlNUSlpOVmt5V1RGT1JIUnFZako0ZG1OcWIycE5SRUYzVHpOQ2FGcEhVbkJpYldNMlRraENORWxFYUhkbFJIUnRZakkxTUV4WVRuQmxiVlUyVFZNME1GcFhNVGxNYmtKNVdsZGFkbUl6VW14amFYZDFZekpPZVdJeWVITmtXRUZ6VEc1U2JHVklVWFJrTW1od1pFZFdOMWt5T1hOaU0wazJTVEphYlZwdU1IVmpTRXB3V1RKVmRGcHVTbXhqV0hSdFlqSTFNRXhZWkd4aFYyUnZaRVJ2TUUxRVFqbE1iVEYyV2toV2MxcFRNWGRqYld4cVdsTjNkV0pYT1d0a1YzaHNURmhTY0dSSGVHeGxNbHAyWW01UmRHTXliRFphVkc5NFRHcEdiR0pVZEcxaU1qVXdURmhrYkdGWFpHOWtSRzh6VFVSQ09VeHRNWFphU0ZaeldsTXhkMk50YkdwYVdIUnRZa2M1YUdSRWNIbGhWMlJ2WkVSMGJXSXlOVEJNV0U1d1pXMVZOazFUTkhoYVZ6RTVURzB4ZGxwSVZuTmFVekZyV2xoT2FtTnRiSGRrUjJ4MlltNTBkRmxZU201aFZ6UjBaRWM1ZDA5cVZuZGxSSFJ0WWpJMU1FeFlUbkJsYlZVMlRHcHNiR0pZTUhWak1rNTVZako0YzJSWVFqZGtNbXhyWkVkbk5rMTZRbmRsUkhSdldsZHNibUZJVVRaTmVrSjNaVVIwYldJeU5UQk1XRTV3WlcxVk5rMXFTbmRsUkhSellWYzFiRXhYYUd4aFYyUnZaRVJ2ZWsxSVFqUlBNMUpzWlVoUmRGbFhlSEJhTWpRMldUSldkV1JIVm5sUE1sSndZek5DYzFsWWF6WmliVGwxV2xSMGQySXpUbkJrUjJ4MlltcHdiV0ZZYUd4YVJIUjVZVmRrYjJSRWJ6Qk5TRUkwVHpKS2RtUklVblppVkc4d1RVaENORTh5U21oWk1uUnVZMjA1TVdKdFVUWmpiV1JwV1ZObmQweEVRWE5OUTNkMVRYbHNPVXh1VG1wamJUbHpZa2hXZDA5dFNteGFiVGw1V2xoMGJXSXlOVEJNVjFwb1lsZHNjMlZVY0hCWk1qbDBZakk1ZFU4eVRuWmlibEpzWW01Uk5saERTbU5ZUjFaclRucEdZMGx1TUhWak1rNTVZako0YzJSWVFUWmFiVGxxWkZoTmMweHVUbXBqYlRsellraFdkMDl0YUhaa2JWWjVaVE5TYkdWSVVYUmFSMVpxWWpOS2FHUkhiSFppYW5CMVlqSTFiR1pUTlhkamJWWnRZakk1TUZwWVNqZFpiVVpxWVRKa2VXSXpWblZhUkc5cVRWUkJNMUpyVFhsUE0wSm9Xa2RTY0dKdFl6Wk5la0ozWlVnd2RXTklTbXhhYlRsMlpFZFdlVWxIWjNwbE1rNTJZa2M1ZVU5cFRtMWFiVmszV20wNWRXUkRNWHBoV0hCc1QycEdiR0pVZEhSWldFcHVZVmMwTmsxVVFuZGxRMEYzWmxNMWQyTnRWbTFpTWprd1dsaEpaMkZFVFhWak0xWnBURmhTY0dSSGVHeGxNbHAyWW01UmRHUXlWbkJhTW1nd1QycE5kMDFJTVVGaVYxWnJZVmRGWjJJeU5YTmxVMEo2V1ROS2JGcFhOR2RaVnpWclNVTm9kRmxZWjNSa01teHJaRWRuTms1RVozZGpTR2R3WlhrMU1tRlhVbXhpZVRGcVlqSTFNRmxYYkhWYVdFbzNaREpzYTJSSFp6Wk5WRUYzU2xSMGIxcFhiRzVoU0ZFMlRWUnJNbU5JYURsTWJsWndURmhTYUZsdWRETmhWMUl3WVVSdmVFMUVRV3htV0RCMVdrZFdkV0o1TVcxaU1qa3dXbGhKZEdGWE1XaGFNbFkzWkRKc2EyUkhaelpOYWtsM1kwaG5OMXB0ZUhaWldGRTJZMjFzYm1GSVVUZGpSMFpyV2tkc2RWcDZiekZqU0djM1lsZEdlVm95YkhWUGFrVjNZMGhuWjAxcVZuZGxTREIxWTBkR2RWcFhkM1JhUjFadFdWaFdjMlJFTkhWalIwWjFXbGQzZEdGSFZtaGFSMngxV25rMWQxbFhOV3hpUXpGdldsZEdhMkZYTlc1TVdFSjVZVmN4YUdOdWJEZFpiVVpxWVRKa2VXSXpWblZhUkc5cVRVUkJlVTlVVlRWUE1rcDJZMjFTYkdOcWNIVmlNalZzWmxNMWQxbFhOV3hpUXpGcldsZGFhR1JYZURCUWFUVjNXVmMxYkdKRE1XOWFWMFpyWVZjMWJreHVRbWhpYlZaelRGZG9iRmxYVW5CaWJXTjBZekpXYW1SWE5XdFpXRW8xWlRKS2FGa3lkRzVqYlRreFltMVJOa2w2UlhkT01GcEVUV3AwYVdJelNtdGFXRWsyWW0wNWRWcFlNSFZqUjBaMVdsZDNkRnBIVm0xWldGWnpaRVEwZFdOSFJuVmFWM2QwWVVkV2FGcEhiSFZhZVRWM1dWYzFiR0pETVc5YVYwWnJZVmMxYmt4WFRuWmlWMHB3WlRKS2FGa3lkRzVqYlRreFltMVJOa2w2VFROT1YxRjZXV3AwYVdJelNtdGFXRWsyWW0wNWRWcFlNSFZpVXpGNlkwZEdhbUZYTlc1TVYwcDJaRWhTZG1KWWRIUlpXRXB1WVZjMGRGbHRPVEJrUnpsMFQycE5kMk5JYURsTWJUQjBZek5DYUZreWJIVmFlVEYzV1ZkU2EyRlhOVzVsTTBKb1drZFNjR0p0WXpaT1ZFSjNaVWd3ZFdKVE1UQmFXR2d3VEZkNGNHSnRWakJoU0VwMlpGZGtiMlV6VW14bFNGRjBXa2RXYW1JelNtaGtSMngyWW1wd2MyRlhOV3hNV0ZKdlkyMDVNVm95YURsWVJ6UjJTMmxOWjJNeU9URmpiVTVzVkZkR2QyTkhiSFZhTVZaVFZFUXhhMWxZVW1oUGJVWjNZMGQ0Y0ZreVJqQmhWemwxVERKd2VtSXlORGRaYlVaNldsUlpNRXhIVmpWVGFrcGhWMFZ3TmxsV1l6VmtWV3h4WWpOd1RWRXdjRFpaYWs1WFpWWnJlVlp1Y0VwaGJrSnBVMWMxVDJOSFVraFdXRlpwVmpKNE1WUkhNVTlsYlU0MVUyMVNUVkV3Y0RGWFZtTjRZa2RPTlZOVVdsaE5WRUo2VTFjd2VHRkhUa2xSYmtKcFlsZFNObE5YY0haaFZrWldVbTV3VTFaVlZucFpiRlpQVVdzd2QxUnJTazFTYTFwRFdWUkNVMUpyZUVkVWEwcFNWbXhXZWxaVVFrZGxiRXBIWWpOT2FGWlZjRU5WTVZaV1l6SkpkMU5yU21oaE1EVkRWRVZrUjFGdFJYZFVhMXBOVW0xU1ExVldXbkpqTVZGM1VtcEtWRll5YUVSVVJWcHpVV3hGZDFaWVRsZE5SVnBEVmpGT05GVnNSbFpXYlhSTlVqQTFRMVZVUWxaak1WbDNVbXRLV0ZVemFGTlZWbFpYWVRCNFNGUnJTbEpOUmxaNlZtcENSMUZzWkZSbFJUVlNWbFUxYUZSRlpITlJNVVpXVW01S1VtRllaekZWVjNSSFVrZEtSbE5ZVG1GTlJYQkRWVlprYzFFd2VFWk5WVXBTVFc1Q1JGUkZXa2RSYkVaWFZGaE9WRTFGV2tOVk0ydzBVbXhHVmxSdGRFMVNNbmhFVlZaV1QxSnJlRWRhUlVwU1ZtMTBlbFZzVmtkU2JVWkdVMWhPYTFaVmNFTlZWRUpXWXpGV1ZsSnJTbFpsV0doTlZWWldSMVJGZUVaV2EwcFRWakpvUkZSRlpITlJNVVpXVkd0YVRWSlVSa05WVmxVMFl6RlNWbEpyVWxaUk0yaFJWVlpXUjFWcmVFWk5WVXBTVFZWc2VsWkVRa2RSYkZaVVpVVndVbFpWV2t0VVJWVjRVV3hHVmsxSVRsUk5SVnBGV1d0V1NtTXhXWGRTYTBwWVZUTm9SMVZXVmtkVGEzaEdWbXRLVWxaWGRIcFZla0pIVVd4T05XVkZXbEpXVlZwTFZFVmFSMUZzU2xSUFZVNU5VbXMxUTFWVVFsWmpNVlpXVW10S1ZtVllhRWRWVmxaWFYxVjRSMUpyU2xKTlJsWjZXV3hXUzFGc1JsaFBWVTVOVWxkNFExVldWbkpqTVU1V1VtdEtWVlV6YUUxVlZsWk9UbFpHY0dWSE5WSmhNRnBEV1ZaV1NtTXhUbFpTYTBwVVZUTm9TMVZXVmtkVWEzaEdaRVZLVW1Wck5VUlVSV1JYVVd4R1dGcEZUazFTVjNoRFZWWldjbU14VGxaU2EwcFZWVE5vVFZWV1ZrNWxSa1p3WlVkd1VsWlZXbk5VUlZaelVXeEdWbUV6VGxSV1ZWcERWa1pPTkZSR1JsWlVhbHBTWVZob1dWVldWa2RYYTNoR1lrVktVbFpYZEhwVk1WWkhVV3hTVkdWRmVGSldWVFIzVlZkc05GZEdSbFpTYkhCTlVtdGFRMVZVUm5aak1WbDNVbXRLV0ZVemFFOVZWbFpQV1ZWNFIxSnJTbEpXYXpGNlYxWldSMUpHV2tSbFJtaFNWbFZhWVZSRlZqQlJiRVY0WWpOT1ZWWlZXa05XU0d3MFlrWkdWbFJzUmsxU2JGcERWVlphYW1NeFRYZFNhMUpZVVROb1lWVldWa2RoUlhoR1lrVktVMDFzYkhwWGJGWkhVa1pLVkdWR2FGSldWVnBoVkVWYVIxRnNSWGhpTTA1b1ZsVndRMVZVUWxaak1WSldVbXRLVldWWWFFMVZWbFpYVjFWNFNGUnJTbEpOUmxaNlZteFdSMUZzV2pWbFJUVlNWbFUxV2xSRldrZFJiRVpYVkZoT1ZWWlZXa1ZXYTA0MFZXeEdWbEpzVWsxU1YzaERWVlpXY21NeFNsWlNhMHBUVlROb1RWVldWbGRqVmtad1pVZHdVbFpWTlVkVVJXUnpVVEZHVmxKdVNsSmhXR2hUVlZaV1YyUXhSbkJsUmxwU1ZsVTFSMVJGWkd0Uk1VWldVbTVDVW1GWWFFMVZWbFpQWTFaR2NHVkZOVkpXVlZwUlZFVldNRkZzUlhoUldFNVdWbFZhUTFaWWJEUlVSa1pXVW10NFRWSldXa05WVkVwU1l6RlNWbEpyU2xWbFdHaE5WVlpXVDFWVmVFZGFSVXBTVm0xMGVsWkdWa2RTUm1Sd1pVWkNVbFpWV2xOVVJWWXdVV3hGZUZOWVRsWldWVnBEVmxoc05GUnNSbFpXYkd4TlVqQmFRMVZVUWxaak1YQldVbXRLWVUxRmJIcFZla0pIVWtkR1JsTllUbWhXVlhCRFZWUkNWbU14VWxaU2EwcFZaVmhvUzFWV1ZrOVZWWGhIVm10S1VsWnRUbnBXUmxaSFZFWndjR1ZHV2xKV1ZUVkhWRVZhYTFGc1JsZGhNMDVXVmxWYVIxZHJUak5PUmtaeVVtdFNVMVV6YUZWVlZsWkhWbXQ0UjFSclNsSk5WbXg2VmxSQ1IxRnNXbFJsUmtKU1ZsVTFXRlJGV2tkUmJFWlhWRmhPVkUxRldrTlZNMncwVW14R1ZsWnRPVkpoV0dNd1ZWZDBSMUpHU2xSbFJsSlNWbFZhVjFSRlZUVlJiRVY0VjFoT1ZVMUZXa05XVms0MFVteEdWbFJzVGsxU2ExcERWVlphVG1NeFNsWlNhMUpYVVROb1dWVldWa2RYYTNoR1pFVktVMVl4Um5wWmVrSlBVV3hGZDFaWVRsVldWVnBEVmtoc05GUkdSbFpVYkVaTlVsUkdRMVZXVlRSak1WSldVbXRTVmxFemFGRlZWbFpIVld0NFJtUkZTbE5XYkd4NlZsUkNSMUpHU2xSbFJtaFNWbFZhWVZSRlZqQlJiRVY0WWpOT1drMUZXa05YYkU0MFZFWkdWbFJ0TVUxU2JYaERWVlJDVm1NeGEzZFNhMHBoVlROb1RWVldWbGRrVmtad1pVWmFVbFpWTlVkVVJWcEhVV3hHVjFSWVRsUk5SVnBGVm10T05GZEdSbFpTYkhCTlVsZDRRMVZVUm5aak1WbDNVbXRLV0ZVemFGTlZWbFpQV1ZWNFNGSnJTbEpOUmxaNlZrWldSMUZzVWpWbFJrcFNWbGQ0V2xSRlVsTlJNVVpXVkd0YVRWSlVSa05WVmxVMFl6Rk5kMUpyVWxaUk0yaFRWVlpXUjFaRmVFWmtSVXBTVFZaR2VsTjZRa3RSYkVWM1ZsaE9WbFpWV2tOV1dHdzBZVVpHVmxSc1ZrMVNiRnBEVlZaYWFtTXhUbFpTYTFKWVVUTm9ZVlZXVmtkaFJYaEdZa1ZLVWsxcmJIcFhWRUpIVVd4d1ZHVkZlRkpXVlRWMFZFVmFhMUZzUmxkaE0wNVVWbFZhUlZZeWJEUmtSa1YzVW10U1UxVXphRXRWVmxaSFZFVjRSbFpyU2xKTlNHUjZWbXhXUjFGc1dqVmxSWGhTVmxaYWVGVlhiRE5sVmtaeVVtdFNVMVV6YUZOVlZsWkhWa1Y0UmxaclNsSk5Wa1o2VkRCV1MxRnNSWGRXV0U1V1ZsVmFRMVpZYkRSU2JFWldVbXRhVFZKWVVrTlZWRXBLWXpBNVJsTnJTbEpOUmxaNlYxUkNSMUZzY0ZSbFJYQlNWbFZhUzFSRlZUVlJiRVpXVDBoT1ZFMUZXa1ZVVmxaS1l6RldWbEpyU2xabFdHaE5WVlpXUjFSRmVFWldhMHBTVFd4R2VsWnFRa2RSYkdSVVpVVjRVbFpWTldoVVJXaHpVa1pHVmxScldrMVNiWGhEVlRGV2RtTXdjM2RUYTBwU1RVWldlbFpHVmtkUmJGSTFaVVpLVWxaWFVYcFZWMncwWW14RmQxSnJTbWhoTURGNlYycENUMUZzUlhkV1dFNVhUVVZhUTFZeFRqUlVSa1pXVkcxR1RWSlVSa05WVmxVMFl6Rk9WbEpyVWxoVk0yZ3lWVmQwUjFGdFRuSlRXRTVwVFVWd1ExVlVRbFpqTVZKV1VtdEtWV1ZZYUV0VlZsWlhWMVY0UjJKRlNsSk5SbFo2Vm14V1IxRnNXalZsUlhoU1ZsVTFXbFJGV2tkUmJFWlhWRmhPVTAxRldrbFdNRTQwVkd4R1ZsUnJXazFTYlZKRFZWWmFjbU14VFhkU2ExSllZVmhvVTFWV1ZrZFdSWGhHVm10S1VrMVdSbnBXYWtKSFVXeGtWR1ZGZUZKV1ZUVm9WRVZWTlZGc1JsZFNXRTVUVmxWYVJWWlhiRFJYUmtaV1VteHdUVkpZVWtOVmFrcFNZekZKZDFKclVsTlZNMmhSVlZaV1IxVnJlRVprUlVwU1ZsaE9lbFZzVmtkVFJuQndaVWhhVW1Fd1drVlZiRTQwVjBaR1ZsSnNjRTFTYTFwRFZXeGtVbU15UlhkVGEwcFNUVVpXZWxacVFrZFJiR1JVWlVaS1VsWldXbkpVUldSclVURkdWbFJyV2sxU2JWSkRWVlphY21NeFZsWlNhMXBoVVROb2NWVldWazlTYTNoR1QxVktVbFpyVm5wVk1WWkhVV3hPVkdWRldsSldWbHB5VkVWYWMxRnNSWGRXV0U1WVZsVmFRMWRXVGpSVVJrWldWRzFzVFZKVWJFTlZWbHBHWXpGS1ZsSnJVbFpoV0doelZWWldUMUpyZUVoVWEwcFNWakZXZWxVeFZrZFJiRTVVWlVaQ1VsWlZXbEZVUlZwSFVXeEdObEpyVGsxU2ExcERWVlphVG1NeFRYZFNhMHBVWlZob1IxVldWazlpTVVad1pETmtVbUV3V2tWVmJFNDBWMnhHVmxacmRFMVNiWGhEVlZaa1JtTXlVbFpUYTBwU1RWZGtlbFpxUWtkUmJHUlVaVVpLVWxaVk5XaFVSVnB6VVd4R1dGSllUbFZXVlZwRlYxZHNOR0ZHUmxaU2JYQk5VbFJHUTFWVVNsSmpNVmwzVW10S1dGVXphRkZWVmxaUFdWVjRSazFWU2xKV1ZHaDZWWHBDUjFKR1ZrUmxSbHBTVmxWYVdWUkZWWGhSYkVWNFdqTk9WbFpWV2tOV1dHdzBWRVpHVmxKcmVFMVNWbHBEVld4a2IxRXdlRWxXYTA1U1ZsVTFSMVJGV2tkUmJFWlhWRmhPVTFaVldrVldhMDQwVlVaR1ZsSnNTazFTV0ZKRFZWUkdTbU15VVhkVWEwcFNUVVpXZWxkcVFrdFJiRVpZWWtWT1RWSXdXa05WYkdoTFVUQjRTRnBGVGxKV1ZUVkhWRVZhUjFGc1JsZFVXRTVhVmxWYVJWWnJUalJXYkVaV1VteG9UVkl3TlVOVlZFWnVZekZaZDFKclNsaFZNMmhUVlZaV1QxbFZlRVpOVlVwU1ZsUm9lbFY2UWtkU1JsWkVaVVpLVWxaVldsVlVSVlp6VVd4R1ZtRXpUbFJXVlZwRlYxZHNORlpzUmxaU2JHaE5VbFJHUTFreFZrOWhWWGhIV2tWS2FsSlZjRU5VUlZwWFVXczFSbFZyU2sxU2JYaERWVlJDVm1NeFVsWlNhMHBWWlZob1RWVldVbGRTYkZwRVpVWndVbFpWTlVkVVJWcHpVV3hHV0ZKWVRsUldWVnBIVlZaT05HRnNSbFpTYlRGTlVqQTFRMVZVUWxaak1WcFdVbXRLVjJWWWFFOVZWbFpQVjFWNFIySkZTbEpXTUZaNlZURldSMUpzY0hCbFIzQlNWbFUxUjFSRlZYaFJiRVpXVDBoT1ZWWlZXa1ZXVlU0MFZteEdWbEpzYUUxU1ZFWkRWV3hrU21NeVNYZFRhMHBTVFVaV2VsWnFRa2RSYkdSVVpVVndVbFpWTldoVVJWcFhVV3hHVjFrelRsUk5SVnBIVjFkc05GWnNSbFpVYTFwTlVsUkdRMVZXVlRSak1VMTNVbXRTVmxFemFGRlZWbFpIVld0NFJtUkZTbEpOVld4NlZteFdSMUZzV2pWbFJYaFNWbFUxV2xSRlduTlJiRVpZVWxoT1ZFMUZXa1ZYVjJ3MFYwWkdWbEpzY0UxU1ZHeERWVlJHZG1NeFZsWlNhMHBXWlZob1RWVldWazlXVlhoSFZHdEtVbFpzVm5wV1JsWkhVa1phY0dWRk5WSldWVnBSVkVWV01GRnNSWGhSV0U1VlRVVmFRMVpXVGpSVVJrWldWR3hPVFZKdFVrTlZWbHB5WXpGd1ZsSnJhR0ZSTTJoM1ZWZDBSMUpHU2xSbFJuQlNWbFZhYjFSRldrZFJiRVY1VTFoT1ZsWlZXa05XV0d3MFZXeEdWbFpyTlUxU01sSkVWVlpXUjJOV1JuQmxSelZTWVRCYVJWVnNUalJpYkVaeVVtdEthRlpWYkhwVmVrSkhVbTFLY2xOWVRsZE5SVnBGVld4T05GZEdSbFpTYkhCTlVtdGFRMVZVUm5aak1WWldVbXRLVm1WWWFFMVZWbFpYVmxWNFNGUnJTbEpOUmxaNlZrWldSMUZzVWpWbFJYaFNWbFUxVWxSRldsZFJiRVpYV1ROT1ZGWlZXa1ZXTUU0MFZVWkdWbEpzU2sxU1dGSkRWVlpXZW1NeFNsWlNhMUpoWVZobmVsVlhkRWRTUmtwVVpVWndVbFpWV205VVJWWnpVV3hPV0dORlRrMVRSM2hGVlZaV1QxSnJlRWhpUlU1U1ZsVTFSMVJGVlhoUmJFWldUMGhPVkUxRldrVldWVTQwVlVaR1ZsSnNTazFTVkVaRFZWUkdXbU14VmxaU2ExSlRWVE5vVDFWV1ZrZFZSWGhHVFZWS1UxWnRaSHBaYkZaTFVXeEZkMVpZVGxWV1ZWcERWa2hzTkZSc1JsWlViRVpOVWxSR1ExVldWVFJqTVZKV1VtdFNWbEV6YUZOVlZsWkhWa1Y0Um1KRlNsSk5Wa1o2VmtSQ1IxRnNWbFJsUlhoU1ZsVmFUVlJGVmpCUmJFbDVWMWhPYVUxR1NrTlZWRUpXWXpGWmQxSnJTbGhWTTJoVFZWWldUMWxWZUVkaVJVcFRWbFpzZWxsNlFsTlJiRVYzVmxoT1YwMUZXa05XTVU0MFZXeEdWbFJ0UmsxU2JYaERWV3hXV21NeVJYZFZhMHBTVFVaV2VsWnFRa2RSYkdSVVpVWktVbFpWTldoVVJWcHpVV3hSZDFkWVRtaE5SWEJEVlZSQ1ZtTXhhM2RTYTBwaFZUTm9UVlZXVmxkalZrWndaVWhTVW1Fd1drVlZiRTQwVld4R1ZsSnNVazFTV0ZKRFZXcEdibU15U1hkVGEwcFNUVVpXZWxkcVFrdFJiRVpZWWtWT1NtRllaSEJYYlRGell6RndWRk5VV2twaWF6VjNXa1ZrVm1SWFNsaGlTRlpOWWxVMU5sa3piRXBqTUd4MVZHNWFhMWRGY0hGWGJGcExaRzFKZWxWWGJGQmhWV3d5V1hwSk5VMVhUblJVYlhoTlpWVnNlbE5YTlU5a2JWSlpVMjF3WVZkRk5VVlpha2t4VFVad1dFNVVRa3BoYmtKcFUxZHJNV1F4YkZsVGFrSm9Wak5DYzFsdGJFSmtWMDE1WWtoU2FsSXpaekZVUm1oUFlXMU9kRTlZVG1sUmVrWnhXV3BKTVUxR2JGaGlTRlpoVjBWc2VsUkhOVmRqUlhoWlZXMW9XbUp1VWpOWmFrNVBZMGRTU0dKSVdtbGhia0kxVjJ4a05HRkhVa2hpUkVwaFYwUkNNVmxzVFhoa01rNTBZa2R3YUZaNlZuVlVSbWhUWVVac2RHVkhlRTFSZWxZd1ZFWm9RMlZYUmxoVWJrSnBZbGRPTUZwRlpFZGhWMHBJVmxka2ExSXlaSHBVUnpWRFpWZEdXRlJ0ZUZwaVZHc3dVMVZrYm1WdFZYcFZiWGhzVTBaR01GZFdaRFJqUm05NVRrUmFXazFzV2pGYVJXUlhaVmRhVkU1WGJHRmxWRVl6V1RJeGMyUkdiRmxUYWxac1RXdHdiMWRVU2pCaWJVNTBUMVJHYVdKV1JUSlRXSEJDWkRBeGNXRjZSbEJYUkVJeFYxY3hhbVJIVFhsV2JYQnJWbnBXY2xkV2FFdE9WMVY1VTIxb1drMXVVblZaTWpBMVRWZEtkRlZVV2twbGExWXpWR3BDWVZKRk1YVk5TRlpvVm5wVmQxa3lNRFZoTWxKWVZHcENhRlo2YkRGYVZFbDRZMGRLY0UxWE9XRldNbmgxV1ZWb1VrNXJOVVZYV0dScVUwZGpNMWRYTVVkaGJVVjVXa2hzYVUweFdqRlhhMDE0WTBkS1dGSnROV0ZXU0VGNFdUSXhNMkl5UmxoTlYyaGhUV3hhTmxSRVNrdGlhM2hZWWtoV2ExTkZjREpVUnpGM1pERndOV0Y2WkZwaVZWcHhXVlJLYTJWWFNYcFdibFpoVVhwR05sbFdhSGRpUlRsMFZHNWFhMkpXV2pWVWVrNURZVVp3U0ZWdVFtbGlWMDB5Vkc1d1EyUXlWa1JSV0dSdFZYcFdkMWx0TlZObFYwbDVWV3BHV2sweFNuZFpha2t3V2pKR1JWSnFaR2xXTUZvMVYycEtjMlJWZUZsVmJscHFVa2M1TTFwc1RURmpNa1paVkdwQ1RWWXdOWFpYYkdSUFkyMUtXRkp1YkdobFZFWnhXVlpvUzJGdFNraFdhbVJxVWpCYWNsZHJaSE5rVm5BMllqTm9UbE5GU1RCVFZWSkRUMVY0ZFZkdVFtRlNNVm95VkVaa1QyUnRTblZWYldob1ZucFdjMWt5TlRCTk1rWllWV3BDYUZKSE9IaFVhMUpEWkRKV1JXUkhPV0ZXTW5oMVdWVm9VazVyTVRaUldHUnFVMGRqTTFkWE1EVmxWbkJJVm01c1VHRnJjRE5hVlU1RFpXMUplV1ZJUW1GUk1FWnhWMjB4WVdKVk9IbFRibHBzVVhwR05sbFZaRWRoTWtsNldYcGFUbEV3UmpOVFZWSkdUVmRPU1ZveVpFNVJNRVp4Vkcxd2FrMXJOVFpYVkU1dFZYcFZlRmxXVFhoTlJteFlVMjV3YkUwd1NtOVhhMlJUWTBkS2RGbDZXazVUUkVJeFdrWmtjbVJIVWtoU2JXeHNaVlJGZWxkc1pFdGpiVVpaVlZoU2ExTkZjRzlaYlRWUFkwZFNTR0pJV21saGJrSnZXV3RrTTFvd2VIRlVibkJLVWpGYWIxbDZTbFpPTUhoWVRWaGFiR0ZVUlhkWk1qRkhaRmROZVdKRVFtaFdlbXd4VkRJeFIyTXlTa1JSV0ZaT1RUQXhibGRzWkVkbGJIQlZZek5TYVZkRk1UQmFSV2hMWVVkS2RWUnVRbXRTTW5neVdXMXdkMkZIU2toa01tUk5ZV3MxTmxOVlpGZGhSMDE1VmxSa1RWWjZhREJhUldoTFlVZEtkVlJ1UW10U01uZ3lXVzF3ZDJGSFNraGtNbVJOWVdzMU5sTlZaRmRoUjAxNVZsUmthMU5GY0c5WmJUVlBZMGRTU0dKSVdtbGhia0p2V1d0a00xb3dlSEZVYm5CS1VqRmFiMWw2U2xaT01XeDBVbTF3YUUxdFVqVlphazVYWkZad1JXSXljR0ZXUlVwelZGVmtWbVF3T0hsTldFSnBZVlJHZGxkc1pITmliVVpKVlZSYVRsWkZSak5aTUdodVRqRndTR0pJY0dwU00yaHZXbFpTZDJOSFNuUmxTRUpwWWxaV01GZFhNVFJrYkd0NVkzcGthVkl5ZURaYVJVMTRaVzFTU1dKSVRtRldTRUl4V1dwSk1XSkZPSHBhU0VKaFUwWktkbFF5TVU5aFIwcElWRmM1VGxaRlJqTlRiRTAwVFRCNGNWTllRbEJOYkhBeVdXMDFVbVJIVFhsaVJGcGhWa2M1TVZReFpGZGtSVGg1VjI1YWFXSnNSakJhUkVwWFkwWnZlV0ZFUWxCaGJVNHpWRlZuZDJSWFVsaGhNMUpyVWpCYWNGUkhNVWRoYlZKSVlrUktZVmRJVW5CWFZtUlBZMnh2ZWxOdVdtdFdlbFp5VkRKc1RtVkZNVVZhUldSU1pXdHZOVlJITlZkalJYaFpWVzFvV21GVVZtOVhWRTVUWTBkU2RGWlhaRnBYU0ZKeFdXcEtOR1J0VG5GaU1uQmhZbFp3ZEZwc1RURk5WMFpVVFZSQ1dsWXdiRzVVUnpGellXMUplVTVVWkdGaVZHd3hXa1ZOZUdWdFJsbGpSM2hRWVd0V01WUXdaRmRrUlRoNVZXNUNhazB3U25wWFZtaHlUbXhzZEdWSVdscE5iazB6V1RCa1IyRXhjRWhpU0ZaaFpXMDRNRmt3YUc1YU1ERkVVVmhvVG1KclNUQmFiRTB4VFZkR1ZFMVVRbHBXTUdzeVdWVmpOVTFzY0ZsVGFtUmFZbFZhY1ZsVVNtdGxWMGw2Vm01V1lWRjZSbkZaYWtvMFpHMU9jV0l5Y0U1V1IzTXhWMnRrVjJGdFdsUk9WRVpvVlhwRmQxZFdaRXBhTVd4WlpFUkNZVmRIWjNkVVJtUlRZa1pyZVU5WWJGcFhSa3AzV1dwSk1FNXRTblJQV0ZaaFZraFNkRmxyWXpWaFIxSkZZMGhPWVZZeGIzZFVlazVEWVVad1NGVnVRbWxpVjAweVZGWlNWMlF5VmtSUldHUlFUVEpTZDFkcmFGTmlNRGx4VWxoa1RsRXhWVE5aYkdSelpGVjRXR0ZIZUdoV01sSjJXa1ZTZG1WRk1VVlJibVJzVWtoU2RsZHNaSE5pYlVaSlZWUmFUbFpGUmpOVGJGSXdZVEpHV1ZSdVpHbFNNRmt4VkRJeFMyTXlTWGxVYmtwdFZYcFZkMWRXWkVwa1JtdDVUMWhXYTFJeFdqRmFSV2d3WkRGc1dGVnRkR2hXZWxaMVZFWmtTMlJ0VWtsVmJscHBWa2M1TmxSVmFFTk9SMXBVVGxSQ1dsWXdiREJYVkVrMVpGZFNTRlp1Vm10Uk1FcDNXV3hrYTA0eVVYbGlSM1JyVWpKak1sUXdVa0ppUlRoNVRWaENhV0ZVUlhwWlZtUlRUVWRHUldJemNFNVNSVW96V2xWbmQyUlhUa2hTYm14clVqSjRlRmRzWXpGT01XeDBVbTF3YUUxdFVqVlphazVYWkZad1JXSXljR0ZoYlhoMFZERmtXazVYV2xST1dHUmFWMFZ2ZDFsV1pIZGlSMHB3VVZoV2FrMXRlREJaTUdRMFRsVjRXVlJ0Y0dwaVZHeDZXV3ROZUdGdFNraGlTR1JzVFRCS01sbDZTbk5OUjBaWVQxaFdVR0pyY0hOWmEyUkhUVWRHV1ZkdGVGQk5hbXQ1VjJ4b1MySlhTa2hQVkU1UVlsZG9kMWRyWkZOaVIwcHhaRWhrV2xZeFNuSlpWbU14WW1zNWNWVllaR3BUUjJSdVZGVm5kMlJYVGtoU2JteHJVako0ZUZkc1l6QmFNSGgxVkc1Q2FWZEZTbnBhVmsxNFpXeHJlbE51V21sU00yUXdXV3RrYzJWdFVrbGtTRnByWWxaYU5WZHRNVFJrYlZJMlkwYzVhRll4U25KWGJHTXdUakpLV0ZKdWJHRk5iWGd4VkRKd1FrNHlUa2hTYlhSaFVqSjRNVmR1Y0haa01EaDVaVWhDYWsweFJqQlplazVUVGxkS1NGWlVXbWxpVkd3eFYyeG5kMlJYVFhsaVNGSnFVak5uTVZSR2FFOWhiVTUwVDFoT2FWRXdSakZaZWtwelpFZE9TR1ZFVmsxWFJUVnhXVEl3TldNeVNrUk5XRTVvVjBVMGQxTlZaRFJqUjFWNVYyNU9hVTFyV1hkVU1qRTBZa1p3ZFZWVVpHdE5iWGh5V2tWa2JrNXJNVlZYV0dScVUwZGpNMWxWWkZkalJtOTVZVVJDVUdGc2JETlpNR2h2VDFWNGRWRnViR2hXTURWM1dXMHhhMDR5U2xoU2JteGhUVzE0TVZSR2FGTmtiVTVGWW5wR1RsTkZTVEJVZWtsNFlVZE9kRnBJUW1saFZFWndXV3BPVTAxSFNYbE5SRnBQWld0S00xcFZaM2RrVjA1SlUyNUNXazF0ZURGWGJteERZakF4ZFdSSVVscFhSWEIxV1Zaak1HUkdiSFJQVkVKclVucHNNRlF5Y0U1a01rNUpZVVJzVFdKclNqVlpWbVJQWWtac2RFOVVVbXhOTUVwdlYydGtVMk5IU25SWmVscE9Wa1ZLTTFwVlVqQmtSbXhaVTIwMWFGWjZVakJhUldNMVpEQTVjVlp1Wkd4U1NGSndWMVprVDJOc2IzcFRibHByVm5wV2NsUXliRTlpUm5CMFZtMHhZVll4YnpWVVJ6VkRaVmRHV0ZSdGVGcGlWR3N3VTFWa2JtVnRWWGxVYmxwcFVucHNOVlF5YkU1a01ERkZVMVJXVDFaSGR6VlVSekIzWkVkT1NWTnVRbHBOYlhneFYyNXJlR0ZYU1hwYU1tUk5ZbXRLTlZsV1pFOWlSWGhZWlVkb1dtSldXbnBhVkVwUFpHMUtTRTlZYkZCaFZUVjBWMjB4V2s0eVRraFNiWFJoVWpKNE1WZHVjSFpsUlRWWlVXcFNiVlY2VmpCVVJtaERaVmRHV0ZSdVFtbGlWMDR3VjFjd05VNUZiRVJPV0dScVlsZDRjVmRzVFhoak1XeFlVMjE0YVZFd1NuWlVWbWd3WVRKR1dWUnVaR2xTTUZreFZESXhjMlJYU2toaVNGWmhWWHBHY0Zscll6VmhiVVkyWkVjeGFVMXFWWGRVUm1oUFkwZFdkRlpVV2s5U01Wb3dWSHBLWVdSdFNuVlZXRkpyVFd4YWQxZHFTbTlOUlRseFZWaGtUbEpJVWpCWFZtaExZbTFHV0U1SVVscGlWR3QzV2tWak5XUkZPWEZUV0dScVUwZGpNMWxzWkVkbFZtOTVZa2hXVFZkR1NqSlpNRkoyVFZkT1NXRkViRTFpVkVJd1dUQm9TMk5HYTNsaVNGWmhaVlJHY0ZscVRtNWFNSGgxVVc1c2FGWXdOWE5VUm1RMFlVWnNkRlp1VGtwU01tUTBVMVZvVDAxWFRrbGtSRUpwVFRCRk1sUlZVakJpVjBsNVRsUkNUVmRGTlhkYVZ6RldUbXQ0Y1ZOdGVHbFhSRUl4V1d4TmVHUXlUblJpUjNCb1ZucFdkVlJHWkV0a2JWWkVVVmhXYWxJd1dqRlhiR1F6WkVac2RFOVhkR3hYU0ZJelYxWmtVMkV5UmxoT1Z6VlFZV3RKTlZSSE1IZGtSMDVKVTI1Q1drMXRlREZYYm10NFlWZEplbG95WkUxaWEwcHZXVzB4VjJNd2VGaFRibHBoVTBkMGJscEdaRFJPTWs1SVVtMTBZVkl5ZURGWGJuQjJaREJzUlZKVVJtcFRSMmMxVkVjd2QyUkhUa2xUYmtKYVRXMTRNVmR1YTNoaFYwbDZXakprVFdKclNtOVpiVEZYWXpCNFdGTnVXbUZUUjNSdVdXdGtjMDR4YkhSUFdHeGhVakZhTlZSR1pFdGtiVkpKVlc1YWFWWkhPVFJaTUdodVdqRndTRkp1Y0doU01WcHlVMVZPVG1Rd01VVlJWR1JxVWpCYWNsZHJaSE5rVm5BMllqTm9UbE5GU1RCVFZWSkNUakpLU0dKSWNHdFJla1kyV2tWb2MyTXhjRlZqU0ZacFRXcFdjMXBzVFRGa1JYaFpVVzVzYUZZd05YZFpiVEZxWkVac2RFOVVVa3BSZWxZelYxWmpNV0pIU2tSTlYyeHBUV3hKTVZOVlpEUmpSVGwwWlVkb2FrMHhSakJYVkVwdlkwZEtTRlZxWkZwaVZHdzFWMnRrVjJWVk9YUk9XRnBwWWxaWk5WUkhNSGRrUjA1SlUyNUNXazF0ZURGWGJtdDRUVVpzV0ZOdVRtRlZNRVl4VjJwS05FNVhUa2hoU0VKYVRXcHNNVlJHWXpWamJWVjVWRzVhYVZKNmJEVlVNbXhPWldzMU5sWnRkRTVOYTI4MVZFY3dkMlJIVGtsVGJrSmFUVzE0TVZkdWEzaE5SbXhZVTI1T1lWVXdTWGRYYTFKM1lsZEdXVk51Y0d0UmVrWnhXVlZrYzJNeGNFUmtNMVpwVlhwR00xa3lNWE5oYlVaWVRsYzFUVmRHU205WFZ6RTBZa1ZzU1ZWdE9WQmlWbkIzV1RJMVQwMUZlRmhVYlRsb1ZqTm9jbHBVVGxOaVIxWkpWVmhTV2xZemFIZFhha2t3VG0xS1NGWnRNV3RTU0ZGNldWWmtVMDFIUmtWaU0yaFBWVEZaTlZSSE1IZGtSMDVKVTI1Q1drMXRlREZYYm10NFRVWnNXRk51VG1GVk1FbDNWMnRPTTJSWFNsUk5XR1JxWWxkNGNWbFdZekZpYTNoWlZXMW9XbUpZYUhOVFZXaFRZakpWZWxwSVFtRlRSa3AyVkRKd1NrNUZjRmxOU0ZacFZYcEdiMWRyWkZKa1IwWllUbGN4YVUwelVuUlpha2t4VFVWNFdWUnVRbXhpVmxVeVZFZHdiMkpIU2xWa1NGcHFVakJhY1ZsV2FGTk9WVGx3VGtSR2JWVjZWWHBYYkdRMFl6SlZlVTFYYUdwaVYxSjNXVzFyZUUxSFNYcFJWRnBPWld0S00xcFZVakJrTVd4WVZXMTBhRlo2Vm5WVU1uQkNUakZzZEZKdGNHaE5iVkkxV1dwT1YyUldjRVZpTW5CaFlsWndkRlI2U2t0a2JVNTBWVzE0YW1GdE9UTlVla3BMWkcxV1JFMVljR2hTTUZweVdXcE9hazV0U25SUFdGWmhWMFJHZGxSWE5UQmtSbXhaVTIwMWFGWjZVVEpVYTFKRFpESldSRkZZWkcxVmVsWndWMjVyZUdWc2NGaFVha1pwWWxaS2Ixa3lOWEprUjBwSVlrYzFhRk5HU1ROWFZ6RkhZVzFGZVZwSWJHbE5NVm94VjJ0U2RtRnJOVVZoUjJ4T1ZqRnNNMXBzVFRGaFZuQTFUVmhrYW1KWGVEQlhWbWhMVGxWNFdHVklRbUZOYldkM1dsUktTMkZHYTNsa1J6VnFZbFJyZUZsdE1WSk9hMncyVVZoa1RtVnNWWHBVVkUxM1pGWnNkRmt6VWxwTmFtd3dWMWN4Y21SSFNraGlSelZvVTBaSk0xZFhNVWRoYlVWNVdraHNhVTB4V2pGWGExSjJZV3MxV0ZWVVZtRlNSbXQzV214Tk1XUXlUblJpUjNCaFZYcEdNRmxxU2xOTlYwcElWbXBrYVZZd1dqVlhha3B6WkZVNWNWWnVaR3hSTUVZeldteE5NV1F5VG5SaVIzQmhWWHBHZWxsV2FFOU5SMVY1WlVoQ2FXSldWakJaVldSWFkwWnZlV0ZFUWxCaGF6RXpXVEJvYms0eVNsaFNibXhoVFcxNE1WUXljRU5QVlhoMVVXNXNhRll3TlhOVVJtUTBZMGROZWxWWFpHbFNNbmN6VjFjd05XVldjRWhXYm14TlZqQndNbHBGYUZOa2JVcFZZak5vYWxOSFpHNVhhMlJIWlcxR1NGWnRkRXBSTURCNVZHNXdXazB3TlhGWmVtUnFVakJhY2xkclpITmtWbkEyWWpOb1RsTkZTVEJUVlZKRFQxVjRkVkZ1YkdoV01EVnpWRVprTkdOSFRYcFZWMlJwVWpKek1sbHJaRWRsYlZKRVRWZHdhRkl5ZUhwWGEyZ3dZVmRKZWxOdGRHRlhSV3N5V1cwd05XUldjRmxOU0ZacVUwVndkMWRVU2xkak1XeFlVMjE0YVZFelpERlpNR2hMWTBacmVWWnVUbHBXTUhCeldXdE5lR0ZHYkZoT1YyeG9WakZhY2xsV1l6RmliVlY1VTIxb1drMXVVblZaTWpBMVRWZEtkRlZVV2twbGExWXpWR3BDWVZKRk1YRmtTRkphVjBWd2RWbFdZekJrUjBwSVZtMHhhMUpIT1RCVVZsSkRaREpXUldSSVVscFhSWEIxV1Zaak1HUkhUblJpUnpWb1UwWkZNbFJHVWtaa01rNUpXbnBrYTFJeFdUQmFSVTE0WVVkS1NHSkhOV2xoYmtKeFYyeGpNVTFHY0ZsVFZHUmFUV3BzZWxscVRrcE9hMnQ1VjIweFlXRnVVblJaYWtreFRVVjRXVlJ1UW14aVZsVXlWRlpOTUdWV2NGaE5SR1JxVWpCYWNsZHJaSE5rVm5BMllqTm9UbE5GU1RCVFZWSkRUMVY0ZFZGdWJHaFdNRFZ6V1d0a1IyRldjRmhrTTFKYVZqQmFNVmRYTVhOaVJuQklZa2hXWVUwelVqTlhWbVJUWVRKR1dFNVhOVkJoYTBVeldWVmtWMk5HYjNsaFJFSlFZV3hHTmxrd2FHOVBWWGgxVVc1c2FGWXdOWE5aYTJSSFlWWndXR1F6VWxwV01Gb3hWMWN4YzJKR2NFaGlTRlpoWlZWS05sa3daRWRrVlRsMFYyNUNhbUpyTkhkVVJtUlBZakpHV0dWSGRHeE5NVXB6V2xWb1VtUkdjRWhXYlhCcFRUQndiMXBGWkhOa2JVcHhZMGhPYUZaNlZuTlVSbWhUWWpKT2RFOVVSbUZOYldjMVZFY3hSMkZIU25SVGJrSmhWakZLZDFsdE1XcGtSMUpJVW0wMWJFMXNTbmRaZWs1RFl6RnNXV0Y2V21oV2VsWjZXVlpqTVdKRmVGaFRiazVwVFdzMWVWUjZUbE5sVm14WVRsaHdZV0pVYkRWWmJGSjNaVmRKZWxWdGFHdFNNVloyVkVaU2EyRXhjRmhaTTBKUVRXdHdiMWRVU2pCaWJVNTBUMVJHYVdKV1JUSlRWRXBhVGxacmVWZFVSazlTU0ZKeFdXcEtOR1J0VG5GaU1uQk9Va1ZHTTFSNlRrTmhSbkJJVlc1Q2FXSlhUVEpVYTJoRFRrVnNSV0ZJWkd4U1NGSjBXV3BKTVUxRmVGbFVia0pzWWxaVk1sUldUVEJOUm5CWVRWUnNUV0pyU2pWWGJHUmhaRzFKZWxWdGVHcGhXR1F4V1hwS1QyVlhTWGxsU0U1clYwVkdlbFJITlZOaVIxWkpWVmhTYTAxdGFIZGFSV1JYVGpGcmVVOVlUbWxOTUdzeVUxUktZV0pXY0hWTlNGWnFVMFZ3ZDFkVVNsWmtSbkIxVTIxNGFsZElVblJaYWtreFRVVjRXVnBIZUdoV01sSjJXa1ZTZGsxRk1VVlJhbXhOWWxSR01sZHJhRmRqTVhCVVRWaGthbUpYZUhGWGJFNHpaRmRLV0U5WGRHdFdNMmh6VkVab1UyTkhVa2hsUjNoc1RXeHdNbGx0TlZKa1IwMTVZa1JhWVZaSE9UUlVSM0JIWWtkS1ZXUkhNV2xOYWxWM1ZFWm9hMkpIUmxoYVJ6bHJVa2M0ZWxSVlVrTlBWWGgwVFZoYVlWTkdXbnBYYkUxNFpESk9kR0pIY0dGWFNGSjBXV3RqTldGSFVrVmpTR3hvVmpKU2RscEZVakJpVjBsNVRsUkNUVmRGTlhkYVZ6RldUbXN4VkU1SWFHRldla1UxVkVjd2VHUnNjRWxXYms1aFZYcEdjbGRzYUU5aGJVNTBZa2hrYTFJeWVESlpiVFV3WkVac1dWTnROV2hXZWxJd1drVmpOV1F3T1hGV2JtUnNVa2hTZEZscVNURk5SWGhaVkc1Q2JHSldWVEpVUjNCellrZEtXVTFJVm1wTmF6VTFXV3BLTkdNeVVsbFJhbVJyVFcxNGNscEZaRzVPYXpFMlVXNWtiRkpJVW5aWGJHUnpZbTFHU1ZWVVdrNWxhMG96V2xWU01HSlhTWGxPVkVKTlYwVTFkMXBYTVZaT2F6RnhVMjVrYkZKSVVucFpWbU14WWtWNFdHRkhlR2hXTWxKMldrVlNkbVZyTVVsUmFsSlFUVEZLYzFwVmFGSmtSbXhZWlVoQ1lVMXFVVEpYVkVwWFpGZFNTRlp1YkZCTmJFcDNXWHBPUTJNeGJGbGhlbHBwWWxSc01WZHNVakJrTWtsNlZHNUNhMUl5ZURKWmJYQjNZbGRHV1dGSGVHRlNTRkkxV1Zaa2EySXlVa1ZpZWtKT1UwVkpNRlI2U2t0a2JWSkpWVzVhYVZaSE9IZFVWV2hEVGtVNGVWTnRhRnBOYmxKMVdUSXdOVTFYU25SVlZGcHFZbGRTY0ZkV1RtNWtNSGhGVVZoT1RsRXpaREZVV0d4elQxVjRkVlJ0Y0dwaVZHeDZXV3RvVjJRd09YUlRiWGhoWWxSc05WZHNhREJpVjBsNVRsUkNUVll4Y0c5WmJHUnpZekpXVldOSVFscE5hbXd3V1dwSk5XUlZPSGxVYmxwcFlteEtjMWx0TlZKT2JHaEVVMjFPV1ZJeFduSlVibkJIV1RCc2RVMUlWbXBOYXpVMVdXcEtOR015VWxsUlZGcGhZbFJzY1ZwR2FFNWpNSGgxVkcxd2FtSlViSHBaYTJoWFpEQTVkR0ZJV210aVZsbzFXbFJPVTJKSFZrbFZXRkpoVWpGYWNWbHFUa3RoUjFKSVlraGFhV0Z1UWpGWmFra3hZa2RhVkU1WVpHcGlWbHAwV1dwSk5VMUdjRmxUYW1SYVlsVmFjVmxVU210bFYwbDZWbTVXWVZKSE9YRlVWbEpDVFRGS2NsUlliRkJOTUVwdlYydGtVMk5IU25SWmVscE9aV3RLTTFwVlozZGtWMDVKVTIxNFlXSlViREphUldSWFpWVnNTRm96Y0d4TmF6VXlXV3RqTldWVk9YQlViVEZoWWxack0xZHRNRFZrVjFKRVRWaHdhRmRJUW5OVU1uQkhZa2RLVldSSVVscFhSWEIxV1Zaak1FNXJNVlZSYm1Sc1VUQkdNMXBzVFRGa01rNTBWbTB4YVUxcWEzZFhiR2hLV2pKR1JWUllWbXBOTVZwd1ZFWm9VMk5IVWtobFIzaHNUV3h3TWxsdE5WSmtSMUY1Vm01Q1lVMXRaM2RVTW5CT1pEQXhTVTFWUm1sV01WcHlXVlprUmxveVNYbE9XRTVzVlRCS05sZFVUa3RpUm5CWVRrZGtXbFo2Vm5KVFZVNXZaRVpzV1ZvelVtdE5iWGh5V2tWa2JrNXJOVVZhTTJScVUwZGtkMXBZYXpGTmJVWllWVzE0YVdWVVJuRlpha2t4VFVac1dHSklWbUZYUlc4eldrUktjMkV5VWtoYWVscE9Wa1ZHTTFOc1VqQmlNWEJZWWtjMWFGTkdSVEpVVmxKeVRXMU9TV0ZFYkUxaWJGcDNWRVpvVTJGR2JIVmtSRTVvVmpGSmQxbFZVblpsUlRGRlVWZDRiVmRFUWpGWGEyUlhaRmRLTlUxWE1XbE5hbXQzVjJ4b1NtUkhSbGhOVjJoaFRXeFpNMXBFU25OaE1sSklXbnBhVG1GcmJETlpNR2h1VGpGd2RHVklXbHBYUmtVeVdUSXhjMkp0UmtsVlZHUnFVakJhY2xkclpITmtWbkEyWW5wR2FsTkhZek5aYkdSSFpWWnZlV0pJVmxCaGExWXpXVEJvYmxvd01YRldibVJzVTBSQ01Wa3daRWRrVm5CWVpETlNZVkl4V25SWFZtaFhZekpTUlU1SVZtcFNNRm94VjJ4a00yUkhSa2hXYldoaFVqSjRNVmR1YXpGa01XeFlUbGQ0YVZGNlJuWlhiR1JIWVRKR1dFNVhOVTFYUlVvMVdWWmplR0ZIVG5WaVJHUmFZbFZhY1ZsVVNtdGxWMGw2Vm01V1lWSkhPWEZVVlZKQ1pWVTVWVlpVVmxCTmEzQXlXVEl4VTJKSFRuRmpTRlpwVFdwV2MxcHNUVEZrTVd4WVRsZDRhVkY2Um5KWGJHUmhZVWRTV0dWRVFsRmhWRll6VjFaak1XSkhTa1JOVnpsaFZqQmFjbGxXWXpGaWEzaDFVVzFvYVdKV1ducFVSbVJ2WWtac1dGVnVRbWxpVjA0d1dYcEtWMkZ0VWxoT1YzUmFWMFZ2TVZwVVNrdGhSbXQ1WkVjMWFtSlVhM2haYlRGU1RtdHNObEpZWkU5TlJuQkZWRmR3TUdGWFNYcFRiWFJoVjBWck1sbHRNRFZrVm5CWlRVaFdhbEl3V2pGWGJHUXpaRVp3U0ZadE1WcFhSbHA2V2tWUk1HUlhUa2hTYmxaaFZqTmtNRmxWWkZkaFJuQklZa2hXWVdWVVZqTlhWbU14WWtkS1JFMVhPV0ZXTUZweVdWWmpNV0pyZUZoVWJscHBWakJ3ZDFwVVNrdGhSbXQ1WkVjMWFtSlVhM2haYlRGU1RtdHNObFJVVGs5V01VWTJWMWR3TUdGWFNYcFRiWFJoVjBWck1sbHRNRFZrVm5CWlRVaFdhVlY2UmpaWk1HUkhZVzFHV0U1WE5VMVdNSEF5V2tWb1UyUnRTbGxrU0ZKYVYwVndkVmxXWXpCa1JteDBUMVJDYTFKNmJEQlVNbkJPWkRKT1NXRkViRTFpVkVJd1dYcE9RMkZHYTNsaVNGWmhaVlJHTTFkV1pGTmhNa1pZVGxjMWJFMHdTbTlYYTJSVFkwZEtkRmw2V2s5V1JVb3pXbFZuZDJSWFNsUk5WRUpoVjBkbmQxUkdaRFJqUjBwMFZtcENhRk5GY0RKYVJtUnJZakpWZWxWdGVHeFRSa1l3VjJ0a1YyRnRTWHBUYldoclVqSjRNbGx0Y0hkak1rWllUbGQ0VFZkR1NuWlpNakExVFZadmVXRkViRmxTZWxJeVV6SnNUbG95VFhsUFZFWnFZbFUxYzFaR1pFZGtNazVJWWtoV1lVMVdXbFJXUlZGNFlURnNXVlZ0YUZCaVZWb3pXVEJrTkdOR2EzbFNha0pvVm5wc01WUkVTbmRsYlVsNVRrUmtXbUpWV2paWGJGSmFUVVY0U0ZacVZsUmhhM0JvVmpCV2QwNXNiRmRaZWxaclZsZDRlRmxxVG5kVVZrVjNZMFJhV21Gck5WaGFWbHB5WlZaYWRXTkZjR2hpYTBwd1ZURmpNVlF5VGtoVmEyaFhWMFphY0ZacVNqUk5WbEpJVFZVNWJHSlZOREZWTWpGVFZGWkZkMk5FUmxoV2JVNDBXV3RrVDA1V1RsVlhiR2hPVmtWS05sVXhZM2RsUjBaSVZHdHNVbUpyU25CWmJHUlRUbXhPV0dOSVdtaFdhMXBYVlcwMWQxVXhXbFpXYm5CYVlrWmFVRlZYYzNka01WSnlVMnN4VTJFeGNFUlhWbEpEVlRGS2NtVkZaRlZoTUhCVFZtMTRWMlZzV2xWUmEyUnNZa1Z3U0ZscVRrOWhSbHBXWTBWT1ZrMVdXbGRaZWtwS1pERk9jbE50YUdoTlJGWkVWa1ZXYTFJeFJuUlNXR1JWWVRGd1RsVnRNVk5STVZaWFYyNUthazFXUmpOVmJYQkxWa1paZVdGRlVsVlNWbkI2VlZkNFJtUXhXbGxVYkdST1VsWndSRlpxUms5T1JsWnpVbXhhVjJKWVVrNVZha0V4VVRGV1ZWRnNXbXBOVm13elZXMTBTMWRHVlhwaFJrNVdWbXhhV0ZsVVFqUlRSbEp5VTJ4S1RsSnNXalpXYlhCRFVqRkdjMXBHVW14U1ZGWlRWbXhWTVdGR1VrWmFTRTVTVFZWYVYxVnROVXRWYlVaWlducEdWbFl6VWtoVmEyUkxVbXhPV1ZSdFJrNVNXRUpFVmxaYWEyTXhSWGRsUlZwT1ZsVndVMVJYTlVOU1JsSkdWMnRrVW1KRldsaFdSbWhQVmtVeFJsZHJUbFpOTW5jd1ZXMTRSMVpzVW5Sa1JURlRUVzVvUlZaV1dsZFVNVXB5WlVWa1lWSlZjRk5XYlRFd1pXeFdjMVpyWkZOaVZWcEhWVEZvVDJFeFdsWmpSVTVXVmtWS1YxbDZSbGRXYkVweVUyeGFiRmRIYUU1V1ZscFhVakZTUm1WRldsZGhNSEJVVm1wS2IxSkdVa1phU0U1U1RWVmFWMVpIZEdGVVZrcFZVbXRPVmxac1ZUQlpla1pUVm14S2NsVnNXbEpOTW1oU1ZsWmFWMUl4Vm5KbFJWcE9WbFZ3VTFSV1ZuTmxiRnBGVVd0a1VtSkdXbFZhVlZaM1ZXeGFWbGRyZEZWU1ZsWTBWVmQ0UjFack1VbFViRkpPVWxad1JsZFhkRmRUYlUxNFYxaGtVMkV3Y0ZsV1ZFNXZVakZXVjFaclpGUmhNMmhIVm0xMFMxVnNXbGhrU0hCV1pXdEtTRlZYZUU5T1YxWkdWMnhLVjFaV2NFeFdSVlpoVWpGR2MxTnNVbEJXVlRWT1ZXMXpNVkV4VmxWUmJGcHFUVlphVjFWdGRFdFdiVlpaWVVWa1ZsWnNXbGhXTVZZMFVqRktjbE5zU2s1U2JGbzJWMWQ0VjFNeFJuTlNiR2hRVmxVMVRsVnNaRFJSTVZaWFZtNUthazFWTlZkVmJYUkxWbFpWZW1GRk1WWldiRnBQVkd4YVIyTkhWa2hPVmtwb1RVWndSRmRXV2xkVGJVMTRWR3hhVTJFd2NGVldWRTV2VXpGV1YxWnJaRlZoTTJoSFdrVldTMVZ0Vm5KT1ZWSlZVbGRTV0ZWWGVFZFhSbkJHVkdzeFUxWXphRVJXVmxwWFkyMU5lRlJzV2xOaE1IQldWbFJPYjFSV1ZsZFdhelZzVW10YWQxcFZaSGRWYkZwV1YyNU9WVkpXV25wVlYzaEhWbTFGZWxSc1VsZFdWbkJFVm10YVQwNUdVa2RTYkZwVllXeHdVMWxXYUc5WFZsWlhWbXRrV0dFemFFZFphMVpMVld4YVdHUkljRlpOVmxwSVZWZDRVMVpIVmtabFJrcFhWbFJTTTFaV1pITk9SbVJIVW14YVUySklRazVWYlhSaFVURldWVkp1V21wTlZtd3pWVzEwUzFkR1ZYcGhSVGxXVm14YVVGZFdWalJTTVVweVUyeEtWMkY2UmpaV01WcFhVakZLUjFkclVteFNiV2hUVm14V1lWbFdVa1pXYWtKU1lrVldORmxxVGs5V1ZscFdWMnRPVjFOSGR6QlphMXBIVm14U2MxSnJNVk5pUm5CRVZsWmFZV0Z0VFhoVVdHUlRZVEZLV1ZWVVRtOVpWbFpYVm10a2FGSllhRWRaYTFaTFZUQXhjMkpJY0ZoaVJscElWV3RhUzFaSFZrZGhSa3BYVmxad2FGWkZWbUZTTVVaelVsaG9hVTB3Tlc5V2JGWjNVVEZXVlZGc1dtcE5Wa3BYVlcxMFMxWlhWbGxoUlRGV1ZteGFXRll4VmpSVFJsSnlVMnhLVGxKc1dqWldiWGhYVWpGR2MxZHFWbXhTVkZaVFZteFZNVmRzVWtaWGEyUlNZa1ZhV0ZaR2FFOVdWbHBXVjJ0V1YyRXdOREJXVjNoSFZteEtjMVZyTVZOV00yaEVWbFphVjJOdFRYaFRiRnBUWVRCd1ZGWlVUbTlVVmxaWFZteGthbFpyV25kYVZXUjNWV3hhVms1VlpGVlNWMUo2VlZSR1IxWnNTblZUYkVwb1YwZG9WRlpXV2xkV01sRjRVbTVDYkZKc2NGTldiRlV4VWpGU1JscEhkRkpOVlZwWFZXMDFRMVZ0UmxsaFJURldWbXhhVUZreFdrZGpSMVpHVGxaS1YxWldjRkpXUlZaWFRVWkdjMUpZYUZKWFJUVlhWbXhXWVZFeFdsbGlSRkpWVW10YVYxVnRkRFJVVmtwWFYydE9WbFpGY0ZOWmVrWlRWbXhLY2xOc1ZteFhSMmhPVmxaYVYxUXhWbFpsUldSaFVsVndVMVp0TVRCbGJGcEhWbXRrVTFKdFVuZGFWVnBEVld4YVZsZHNUbFZTVmxsM1ZWZDRSbVZHVGxsVWJGcFhWbFp3UkZac2FITk9SbEp6VW14YVYySkhlRTVWYWtKaFVURldWVkZzV21wTldFSlhWVzEwUzFsVk1VWmlTSEJXWld0S1NGVnJaRWRTYkU1WlZHMW9WMVpZUWtSV1ZsSkRWbTFOZUZWc1dsTmhNSEJXV2xab2IxTXhWbGRXYXpsV1ZsaG9TRlp0ZEV0VmJGcDBWRzV3VjFKc1draFdSVnAzWTBkV1IxZHNTbGRXVkZaSVZrVldZV0V4Um5OU2JHUm9UVEExVjFac1ZtRlNNV1J5VkdwT1QxSnJXbmxWYlhSVFZURlZlbUZHVmxaV2JGcElWbTEwTkZJeFVuSlRiRXBPVm0xNE5sWnNVa05TTVVaelYyeFNiRkpyU2xOV2JGVXhWMFpTUmxkclpGSmlSVnBZVmtab1QxWkZNVVpYYTA1V1RUSjNNRlZ0ZUVkV2JGcDBUMVpLYUZkSFRYZFdWbVF3VWpGS1IxTnNVbXhTYkVwVFZteFdZVll4VWtaV1ZGWlNZa1ZXTkZZeGFFOVdWVEZHVjJ0T1YxWnJOREJWYlhoSFZteFNjMVJyTVZOaE1YQkVWbFphWVZSdFRYaFRiRnBUWVRGS1dGVlVUbTlYVmxaWFZtdGtXR0V6YUVkYVJWWkxWVEZaZUZKdWNGcGxhMHBRVlZkNFJtUXhXbGxVYkZaWFZsWndSRlpyYUhOT1JsSkhVbXhhVldKRldrNVZiRkpIVVRGV1YxWlVVbXBOVmtwWFZXMTBVMVpzUlhwaFJrWldWbXhhU0ZaWGREUlNiVkpHVTJ4T1YySkhlRFpXYkZKRFVqRktSMU5zVW14U2JXaFRWbXhXWVZsV1VrWldha0pTWWtWV05GbHFUazlYYXpGR1YydE9XR0pGTkRCV1JWcEhWbXhTZEUxVk1WTmlXR2hFVmxaU1ExWnRUWGhoTTJSVFlUQndhRlpVVG05VVZsWlhWbXhrYTFaclduZGFWVnBoVld4YVZrNVZaRlZTVm5CSVZWZDRSMVl4VWxsVWJGSk9VbFp3UmxadGRFOU9SbVJIVW14YVUySklRazVWYkdRMFVURldWVkp1V21wTlZtd3pWVzEwUzFkR1ZYcGhSazVXVm14YVVGZFdWalJUUmtweVUyeEtUbEpzV2paV2ExcFhVakZHYzFWcVZteFNhM0JUVm14a05GZHNVa1pWYkU1U1RWVmFWMVpIZEdGVVZrcFZVbXRPVmxac1ZUQlpla1pPWkRGS2NsVnNXbEpOTW1oVVZsWmFWMUl4V2tabFJWcHJVbFZ3VTFSV1drZGxiRTQyVVd0MFVtSkZWak5XYkdoUFZteGFWbGRyVGxkWFIzY3dXVlZhUjFac1VuTldhekZUWWtad1JGWldXbUZoYlUxNFZHeGFVMkV4U2xsVlZFNXZXVlpXVjFaclpHaFNXR2hIV1d0V1MxVnJNWEppU0hCWVZrVktTRlZYZUhkV1IxWkdaVVpLVjFaVVZqQldSVlpoWVRGR2MxSnNaR2hOTURWVlZteFdZVkpXV1hsaVJGSnJVbXRXTTFWdGRGTlZNVlY2WVVWMFZsWnNXa2hXUlZZMFVteGFjbE5zU2s1VFIxSTJWbTE0VjFJeFJuTlhhbFpzVWxob1UxWnNXbUZsUmxaWVlrUk9iRlpyV25sVmJYUlRWVEZWZW1GR1RsWldiRnBJVm10V05GSnNXbkpUYkVwT1ZtdGFObFpFUWxkVE1VWnpVbGhrVjFkRk5WZFdiRlpoVVRGYVdXSkVVbE5pUlZwWFZXMTBZVlJXU2xsVmEwNVdWa1Z3UzFsNlFUVlNiRTV5VTJ4S1RsSnNXalpXTVZKRFVqRkdjMk5HVW14U1dFSlRWbXhXWVZNeFVrWldWRlpTWWtWYVYxUXdhRTlXUlRGR1YydFdWVlpzV2t0WmVrWlhWbXhLY2xOc1dteFhSMmhPVmxaYVYxSXhVa1psUlZwWFlUQndVMVJYZUVkbGJGcHhVV3RrVW1KSFVsVmFWVlkwVld4YVZrNVhhRlZTVjJoNlZXdGFSMVpzVW5KWGF6RlRZbGhvUkZaVVJsZGtiVTEzWXpOa1ZHRXdjRk5VVlZwWFpXeGFSMVpyWkZKaVJra3hXbFZhUzFWc1dsaFZXSEJXVmpKM01GbHRlRVprTVVweVUyMW9hRTFFUmpaV01uQkRWREZHYzFKWVpGZFhSVFZZVkZWV1lWRXhXWGhVYWxKVlVtdGFWMVpITVVkVVZrcFZVbXRPVmxac1ZUQlpla1pQVm14S2NsVnNhRlpOTW1kNVZsWmtNRkl4Um5SVWJrcFVWMFUxY0ZSVlZuZFJNVlpWVVd4YWFrMVdTbGRWYlhSTFZsZFdXV0ZGZEZaV2JGcFlWakZXTkZJeVNrWlRiRXBPVW14YU5sWnRlRmRTTVVaelYycFdiRkpZYUZOV2JGVXhWMnhTUmxkclpGSmlSVnBZVmtab1QxVXdNVVpYYTJ4WFRVVTBNRlpIZUVkV2JGSnlWMnN4VTJKV1NrUldWbHBoWTIxTmVGUllaRk5oTVVwWldWWm9iMVV4VmxkV2EyUlhVbGhvUjFadGRFdFZhekZYVW01d1YyRnJTa2hWVjNoclZrZFdSbVZHU2xkV1ZGWnZWa1ZXVms1V1JuTlNiR1JUVjBVMVZGWnNWbUZTVmxwWVlrUlNXRkpyV2xkVmJYaDNWRlpLV1ZWclRsWmhhM0JUV1hwR1NtUXhTbkpWYkU1V1RUSm9VbFpXV2xkU01WWnlaVVZhYTFKVmNGTldiR2hQWld4V2MxWnJaRlJTYmtKM1dsVm9ZVlZ0UlhkWGExWldZa1UwTUZZd1drZFdiRXB6WTBVeFUyRXhjRVJXVjNoclZXMU5lVkpZWkZSaE1IQlRWRlZhVjJWc1duRlJhMlJTWWtkU1ZWcFZXa3RWYkZwWFYyNUtWVkpYVW5KVlZFWkhWbXhTY2xkck1WTmlWa3BFVmxaYVlXTnRUWGhXYkZwVFlURndhRlZVVG05alZsWlhWbXM1VTJFemFFZFVNVlpMVld4YWNsWnVjRlpOVmxwSVZWZDRUMVpIVmtaWGJFcFhWbXh3ZVZaRlZtRmpNVVp6VWxoa1YxZEZOVmxXYkZaaFVURmtWMVJxVWxWU2ExcFhWa2N4YzFSV1NsVmlSVTVXVm14d1IxbDZSa3RXYkVweVZXeGFhRmRIYUhwV1ZscFhWREZLY21WRmFGVmhNSEJUVm1wR1YyVnNWWGhXYTJSU1lrVTFWVnBWV2tOVmJGcFdWMnhHVlZKV2NFaFZWM2hIVG14S2NsUnJNVk5oTVhCRVZsWmFZVlJ0VFhoVVdHUlRZVEJ3VlZwV2FHOVNNVlpYVm1zNWFVMVZXbmRhUkU1clZXMUZkMWRyVmxaaVJUUXdWako0UjFac1duSmtSVEZUWWxob1JGWldXbXRTYlUxNVZXeGFWR0V3Y0ZOVVZtUnJaV3hhY1ZGclpGSmlSMUpWV2xWYVMxVnNXbFpPVjJoVlVsWndlbFZYZUVkWFJrcFpWR3hXVjFaV2NFWldNV1J6VGtkR1IxSnNXbE5pV0VKT1ZXeFNSMUV4VmxWVGJFcHFUVlpzTTFWdGRFdFhSbFY2WVVaR1ZsWnNXbEJYVmxZMFVtc3hWbE5zU2xkV1IyZzJWbGh3UTFJeFNrZFdhMUpzVW14d1UxWnNWbUZYVmxKR1ZsaG9VbUpGVmpSWGFrNVBWbXhhVmxkclRsZFhSM2N3VmtWYVIxWnNTbkpsUlRGVFZteHdSRlpYZUd0aU1VVjNaVVZzVjJFd05WTldiRlV4VWpGU1JsZHJaRkppUlZwWVZrWm9UMVV4V2xaWGExWlhZVEEwTUZaVldrZFdiRXB6VTJzeFUxZEdTa1JXVmxKSFUyMU5lVlZZWkZWaE1IQlRWRlZhVjJWc1pIRlJhM1JTWWtWYVdWbHJWazlVVmtsM1YydE9WbUpIYUV4VlZFSTBVMFp3UmxSc1NsZFdWRlpJVmtWV1lWSXhSbk5TYkdSVlYwVTFZVlpzVm1GU1ZscHlWR3BTVjJKRldsZFZiWGh2VkZaSmQwNVZUbFpXUlZwMVdYcEdXbVF4U25KVGJHaFdUVEpvVkZaV1dsZFVNV3hXWlVWYVRsWlZjRk5XYkZKdlpXeFdObEZyWkZOU2JGcEZXbFZhUzFWc1dsWlhiRlpWVWxaYWVsVlhlRWRXYlVWNlZHeFNWMVpXY0VaV01XUnpUa1phYzFKc1dsTmlSMmhPVld4U1IxRXhhM2hXYXpsb1ZsaG9TRmRyVmt0aGJFcFdZMFZPVlZKV2NGaFZWM014VW14V2NsTnJNVk5pV0doRVZsWlNRMVp0VFhoVmJGcFRZVEJ3VmxwV2FHOVVWbFpYVld4a1UySkdjRVZhVlZwM1ZXeGFWazVWWkZWU1ZuQjZWVmQ0UjFkR1NsbFViRkpYVmxad1NGWldXazlPUjBaelVteGFVMkpVUms1VmFrRXhVVEZXVlZGc1dtcE5WbkJYVlcxMFMxWXlWbGxoUlRsV1ZteGFVRll4VmpSU01rcEdVMnhLVjAxR1dqWldWRVpYVWpGS2MyTklRbXhTTTBKVFZteFZNVkl4VWtaV1dHaFNZa1ZhVjFRd2FFOVdWbHBXVjJ0V1YxWlZOREJXYlhoSFZteEtjMkZGTVZOV1JWcEVWbGQ0YTFOdFRYbFRXR1JVWVRCd1UxUlZXbGRsYkZweFVXdGtVbUpIVWxWYVZWWjNWV3hhVms1WGFGVlNWbkJZVlZkNFIxWXhhM3BVYkZKT1VsWndTRll4WkhOT1JscHpVbXhhVldFeGNFNVZiRkpIVVRGV1YxWlVVbXBOVlRFelZXMTBVMVpzUlhwaFJrWldWbXhhU0ZaWGREUlNiVkpHVTJ4S1RsWlhlRFpXYlhoWFVqRkdjMWRxVm14U1dHaFRWbXhWTVZkc1VrWlhiazVTWWtWYVdWVnNhRTlXUlRGR1YydFdXRll5ZHpCV01GcEhWbXhLYzJORk1WTldSM2hFVmxaU1IyUnRUWGhXYkZwVFlUQndWMXBXYUc5VVZsWlhWbXM1VjFaWWFFaFdSM1JMVld4YWMxWnVjRmRTYkZwSVZXdGFZV05IVmtaT1ZrcFhWbFp3VWxaRlZsZE5Sa1p6VWxob1VsZEZOVlpVVlZaaFVURmFWMVJxVWxWU2ExcFhWa2Q0VDFSV1NuUlZhMDVXVm14d2VWbDZSbmRXYkVweVlVZEdVazB5YUROV1ZtUXdVakZLUjFOc1VteFNia0pUVm14V1lXSXhVa1pYYTJSU1lrVldOVlV4YUU5V2JGcFdWMnRPVjFkSGR6QldWM2hIVm14YWNrNVZNVk5OYkVwRlZsWmFWMUl5VGxkU2JrSnNVbnBXVTFsVVFtRlNWbFp6VkdwU2FXSkZXbmxWYlhSTFlVWmFWbUpJY0ZabGEwcElWVzB4UzJOc1RsbFViR1JPVWxad1JsWlhlRTlPUm1SSFVteGFVMkpJUWs1VmJYUmhVVEZXVlZKdVdtcE5WbHBYVlcxMFMxWnRWbGxoUlRGV1ZteGFXRlpzVmpSVFJsSnlVMnhLVGxKc1dqWldhMXBYVWpGR2MxVnFWbXhTV0doVFZteFZNVlZzVWtaWGJHUlNZa1ZhV0ZkVVRrOVdSbHBXVjJ0V1YwMUZOREJXVlZwSFZteEtjMU5yTVZOWFJrcEVWbFphVjJWdFRYaFRiRnBUWVRGS2FGbFdhRzVsYkZaWVpFVmtVMUpyY0ZWYVZWcDNWV3hhVmxkdE9WVlNWbHA2VlZkNFQxZEhUa1pVYXpGVVVqTm9SbFpXV2xkVU1VcHlaVVZvYVZKVk5WTldiRlV4VWpGU1JsWllhRkppUlZwWFZEQm9UMVpGTVVaWGExWlhWbFUwTUZaVldrZFdiRXB6VTJzeFUxWkZXa1JXVmxKSFYyMU5lRlpzV2xOaE1VcFVWbFJPYjFReFZsZFdhMlJXVWxob1IxUldWa3RWTVZwMFdraHdXbUpHV2t4VlYzaEdaREZhV1ZSc1ZsZFdWbkJFVm10b2MwNUdVbk5TYkZwVllrVmFUbFZzVWtkUk1WWlhWbFJTYWsxV1NsZFZiWFJUVm14RmVtRkdUbFpXYkZwSVZtdFdORkp0U2taVGJFcE9WbXRhTmxaclVrTlNNVVp6Vm14U2JGSllhRk5XYkZaaFZGWlNSbFpxUWxKaVJXdzFWakZvVDJGVk1VZFRhMDVXVmtWS1YxbDZSbHBrTVVweVUyeG9WazB5YUZSV1ZscFhWREZzVm1WRlpHbFNWWEJVVm14YWMyVnNiRFpSYkU1U1lrVldNMVpzYUU5V01ERkdWMnRPVjAxVk5EQldWM2hIVm14U2RGSnJNVk5pV0doRVZsZDRWMWR0VFhsU1dHUldZVEJ3VTFSVldsZGxiRnB4VVd0a1VtSkhVbFZhVlZwTFZXeGFWazVYYUZWU1ZuQjZWVmQ0VW1ReFpGbFViV2hPVWxoQ1JGWldVa05XYlUxNFlUTmtVMkV3Y0doV1ZFNXZWRlpXVjFac1pHcFdhMXAzV2xWb1UxVnRSWGRYYTFaV1lrVTBNRlpYZUVkV2JFcHpWV3N4VTFkR1NrUldWM0JIWW0xTmVWTllaRlJoTUhCVFZGVmFWMlZzWkhGUmEzUlNZa1ZhV1ZsclZrOVRiVVpaV2toQ1dHSlVSbnBaZWtaM1ZrWk9WVmRyY0dsaGVsWXpWMnRXYTFadFVsaFRiR2hwVTBaYVRsbHNWVEZPYkd0NllrVndhazFIZURGV1J6VmhZVEZrUm1OSVJsaGlSbkJNV2tjeFNtVnNWbGhpUmtKb1ZsZDNlVmRZY0VwT1ZURllWRzVTVldKWWFFNWFWbFp6Wld4T1dFNVZPV3RpVmtwYVZUSXhkMWxXWkVaT1ZWWmFZV3RyZUZSVlduZFhSVFZWVVd0d2FHSnJTbkJXTUZwdVpERkNWRkZZUmsxTldHZ3hVMWQzZUU5VFFYRk1NWGgxU1d3eE9TQXFMMXh1SWwxOSAqL1xuIl19 */
