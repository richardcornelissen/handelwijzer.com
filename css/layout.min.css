.btn-promo,body{position:relative}body{background:#fff;font-family:"Open Sans",arial,helvetica,sans-serif;color:#343434;font-weight:400;font-style:normal;font-size:14px}.btn-promo{background-color:#002959;border:1px solid #002959;padding:15px;margin:10px 0;color:#fff;font-weight:700;line-height:14px;cursor:pointer;border-radius:3px;outline:0;width:auto;height:auto;display:inline-block;text-decoration:none;white-space:nowrap;-webkit-transition:all .2s ease;-moz-transition:all .2s ease;-ms-transition:all .2s ease;-o-transition:all .2s ease;transition:all .2s ease;-webkit-backface-visibility:hidden}.btn-promo:hover{background-color:#00408c;color:#fff}.header{padding:15px 0;position:fixed;width:100%;background:#fff;z-index:999;box-shadow:0 1px 2px 0 rgba(0,0,0,.2)}.logo{float:left}nav{float:right}.nav-menu{display:block;list-style:none;padding:10px 0 0}.nav-menu li{display:inline-block}.nav-menu a{padding:5px 0;margin:0 0 0 30px;color:#002959;font-weight:600}.nav-menu li.active a{border-bottom:2px solid #002959}.nav-menu a.btn{padding:5px 30px;color:#fff}.nav-menu a.btn:hover{color:#fff}.nav-menu li a:focus,.nav-menu li a:hover{color:#00408c;text-decoration:none}footer,footer a{color:#fff}.responsive-menu{display:none;float:right;margin:-10px 10px -10px 0}footer{background:#343434;padding:30px 0}footer h4{color:#676767;margin:20px 0}.btn.secondary{background:#fff;color:#002959}h1,h2,h3,h4{font-weight:600;color:#002959}h1{font-size:2em}h2{font-size:1.8em}h3{font-size:1.6em;color:#107FC2}.m-top{margin-top:50px}.slides-container .container{position:absolute;top:50%;left:0;right:0;text-align:center;z-index:2;width:100%;min-height:260px;padding-top:5px}#slides .slides-pagination{bottom:25px}@media only screen and (max-width:480px){.responsive-menu{display:block}nav{display:none;width:100%;margin-top:-20px}.nav-menu li{display:block;padding:5px;border-bottom:1px solid #eee}.nav-menu li:last-child{border:none;text-align:center}}
/*# sourceMappingURL=data:application/json;base64, */
